{"version":3,"file":"index.js","sources":["../src/scripts/utils/maths.js","../src/scripts/utils/rect.js","../src/index.js"],"sourcesContent":["export function clamp(min, input, max) {\r\n  return input < min ? min : input > max ? max : input\r\n}\r\n\r\nexport function mapRange(in_min, in_max, input, out_min, out_max) {\r\n  return ((input - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\r\n}\r\n\r\nexport function lerp(start, end, amt) {\r\n  return (1 - amt) * start + amt * end\r\n}\r\n\r\nexport function truncate(value, decimals) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n","export function offsetTop(element, accumulator = 0) {\r\n  const top = accumulator + element.offsetTop\r\n  if (element.offsetParent) {\r\n    return offsetTop(element.offsetParent, top)\r\n  }\r\n  return top\r\n}\r\n\r\nexport function offsetLeft(element, accumulator = 0) {\r\n  const left = accumulator + element.offsetLeft\r\n  if (element.offsetParent) {\r\n    return offsetLeft(element.offsetParent, left)\r\n  }\r\n  return left\r\n}\r\n\r\nexport class Rect {\r\n  constructor(element) {\r\n    this.element = element\r\n\r\n    this.update()\r\n  }\r\n\r\n  update() {\r\n    this.windowWidth = Math.min(\r\n      document.documentElement.clientWidth,\r\n      window.innerWidth\r\n    )\r\n    this.windowHeight = Math.min(\r\n      document.documentElement.clientHeight,\r\n      window.innerHeight\r\n    )\r\n\r\n    this.top = offsetTop(this.element)\r\n    this.left = offsetLeft(this.element)\r\n\r\n    const { width, height } = this.element.getBoundingClientRect()\r\n    this.width = width\r\n    this.height = height\r\n\r\n    this.right = this.left + this.width\r\n    this.bottom = this.top + this.height\r\n  }\r\n\r\n  computeRect(x = 0, y = 0) {\r\n    const rect = {\r\n      top: this.top - y,\r\n      left: this.left - x,\r\n      height: this.height,\r\n      width: this.width,\r\n      bottom: this.windowHeight - (this.top - y + this.height),\r\n      right: this.windowWidth - (this.left - x + this.width),\r\n    }\r\n\r\n    return rect\r\n  }\r\n\r\n  computeIntersection(x, y, margin = 0) {\r\n    const rect = this.computeRect(x, y)\r\n\r\n    const inView =\r\n      rect.top + rect.height > -margin && rect.bottom + rect.height > -margin\r\n\r\n    return inView\r\n  }\r\n}\r\n","import EventEmitter from \"events\"\r\nimport { clamp, lerp, truncate } from \"./scripts/utils/maths\"\r\nimport { offsetLeft, offsetTop, Rect } from \"./scripts/utils/rect\"\r\n\r\n//TODO: scroll to input/button focus\r\n\r\nclass ScrollElement extends Rect {\r\n  constructor(element) {\r\n    super(element)\r\n\r\n    let speed = element.getAttribute(\"data-scroll-speed\")\r\n    speed = element.speed = parseFloat(speed)\r\n    speed = !isNaN(speed) ? speed : 0\r\n    this.speed = speed / 10\r\n\r\n    this.inView = false\r\n    this.call = element.getAttribute(\"data-scroll-call\")\r\n    this.delay = element.getAttribute(\"data-scroll-delay\")\r\n    this.delay = this.delay ? parseFloat(this.delay) : null\r\n    this.repeat = element.getAttribute(\"data-scroll-repeat\") !== null\r\n    this.direction = element.getAttribute(\"data-scroll-direction\")\r\n    this.position = element.getAttribute(\"data-scroll-position\")\r\n    this.sticky = element.getAttribute(\"data-scroll-sticky\") !== null\r\n    this.offset = element.getAttribute(\"data-scroll-offset\")\r\n    if (this.offset) {\r\n      this.offset = this.offset\r\n        .replaceAll(\" \", \"\")\r\n        .split(\",\")\r\n        .map((v) => ([\"top\", \"bottom\"].includes(v) ? 0 : v))\r\n    } else {\r\n      this.offset = [0, 0]\r\n    }\r\n\r\n    this.offset = new Array(2).fill(0).map((_, i) => this.offset[i] || 0)\r\n\r\n    this.target = document.querySelector(\r\n      element.getAttribute(\"data-scroll-target\")\r\n    )\r\n    if (this.target) {\r\n      this.target = new Rect(this.target)\r\n    }\r\n  }\r\n\r\n  update() {\r\n    super.update()\r\n  }\r\n}\r\n\r\nconst defaultOptions = {\r\n  autoRaf: true, // [Boolean] does Lenis should handle it's own raf or not\r\n  smooth: 0.88, // [Boolean, Number] smoothness: 0 is native, 1 is smooth\r\n  direction: \"vertical\", // [String] \"vertical\" or \"horizontal\"\r\n  effects: true, // [Boolean] enable/disable effects (parallax, sticky)\r\n}\r\n\r\nexport default class Lenis extends EventEmitter {\r\n  constructor(options = {}) {\r\n    super()\r\n    this.setMaxListeners(Infinity)\r\n\r\n    this.options = { ...defaultOptions, ...options }\r\n\r\n    if (!this.options.wrapper || !this.options.content) {\r\n      console.warn(\"lenis: missing wrapper or content\")\r\n      return\r\n    }\r\n\r\n    // convert Boolean to Number\r\n    this.options.lerp = this.options.smooth + 0\r\n\r\n    // parse as Number\r\n    this.options.lerp = !isNaN(parseFloat(this.options.lerp))\r\n      ? parseFloat(this.options.lerp)\r\n      : defaultOptions.lerp\r\n\r\n    this.options.lerp = clamp(0.01, 1 - this.options.lerp, 1)\r\n    this.options.smooth = this.options.lerp < 1\r\n\r\n    document.documentElement.classList.add(\"has-scroll-init\")\r\n\r\n    const { wrapper, content, direction, smooth, lerp, effects } = this.options\r\n\r\n    this.wrapperElement = wrapper\r\n    this.wrapperElement.addEventListener(\"scroll\", this.onWrapperScroll, false)\r\n\r\n    this.contentElement = content\r\n    this.direction = direction\r\n    this.smooth = smooth\r\n    this.lerp = lerp\r\n    this.effects = effects\r\n\r\n    this.delta = { x: window.scrollX, y: window.scrollY }\r\n    this.scroll = { x: window.scrollX, y: window.scrollY }\r\n    this.latestScroll = { x: window.scrollX, y: window.scrollY }\r\n\r\n    this.update()\r\n\r\n    window.addEventListener(\"scroll\", this.onScroll, false)\r\n    window.addEventListener(\"resize\", this.update, false)\r\n    document.addEventListener(\"focus\", this.onFocus, true)\r\n\r\n    // prevent anchor link click\r\n    this.anchors = [\r\n      ...document.querySelectorAll(\"a[href^='#'], [data-scroll-to]\"),\r\n    ]\r\n    this.anchorsHandler = (event) => {\r\n      event.preventDefault()\r\n\r\n      const selector =\r\n        event.currentTarget.getAttribute(\"href\") ||\r\n        event.currentTarget.getAttribute(\"data-scroll-to\")\r\n      const target = document.querySelector(selector)\r\n\r\n      this.scrollTo(target)\r\n    }\r\n    this.anchors.forEach((element) => {\r\n      element.addEventListener(\"click\", this.anchorsHandler, false)\r\n    })\r\n\r\n    if (this.options.smooth === true) {\r\n      document.documentElement.classList.add(\"has-scroll-smooth\")\r\n    }\r\n\r\n    if (this.options.autoRaf) requestAnimationFrame(this.raf)\r\n  }\r\n\r\n  get velocity() {\r\n    return {\r\n      x: this.scroll.x - this.latestScroll.x,\r\n      y: this.scroll.y - this.latestScroll.y,\r\n    }\r\n  }\r\n\r\n  get progress() {\r\n    const x = truncate(this.scroll.x / this.limit.x, 4)\r\n    const y = truncate(this.scroll.y / this.limit.y, 4)\r\n\r\n    return {\r\n      x: !isNaN(x) ? x : 0,\r\n      y: !isNaN(y) ? y : 0,\r\n    }\r\n  }\r\n\r\n  scrollTo(target, options = {}) {\r\n    let offset = parseInt(options.offset) || 0\r\n    let immediate = options.immediate || false\r\n\r\n    if (typeof target === \"string\") {\r\n      // Selector or boundaries\r\n      if (target === \"top\") {\r\n        target = 0\r\n      } else if (target === \"bottom\") {\r\n        target = this.limit.y\r\n      } else if (target === \"left\") {\r\n        target = 0\r\n      } else if (target === \"right\") {\r\n        target = this.limit.x\r\n      } else {\r\n        target = document.querySelector(target)\r\n        // If the query fails, abort\r\n        if (!target) {\r\n          return\r\n        }\r\n      }\r\n    } else if (typeof target === \"number\") {\r\n      // Absolute coordinate\r\n      target = parseInt(target)\r\n    } else if (target && target.tagName) {\r\n      // DOM Element\r\n      // We good 👍\r\n    } else {\r\n      console.warn(\"`target` parameter is not valid\")\r\n      return\r\n    }\r\n\r\n    // We have a target that is not a coordinate yet, get it\r\n    if (typeof target !== \"number\") {\r\n      const top = offsetTop(target)\r\n      const left = offsetLeft(target)\r\n\r\n      if (this.direction === \"horizontal\") {\r\n        target = left\r\n      } else {\r\n        target = top\r\n      }\r\n    }\r\n\r\n    target += offset\r\n\r\n    if (this.direction === \"horizontal\") {\r\n      this.setScroll(target, this.delta.y, immediate)\r\n    } else {\r\n      this.setScroll(this.delta.x, target, immediate)\r\n    }\r\n  }\r\n\r\n  onScroll = () => {\r\n    this.delta = { x: window.scrollX, y: window.scrollY }\r\n\r\n    this.isMoving = true\r\n  }\r\n\r\n  onFocus = ({ target }) => {\r\n    const top = offsetTop(target)\r\n    this.scrollTo(top, {\r\n      offset: -(this.windowHeight / 2 - target.offsetHeight / 2),\r\n    })\r\n  }\r\n\r\n  onWrapperScroll = () => {\r\n    this.wrapperElement.scrollTo(0, 0)\r\n  }\r\n\r\n  setScroll(x, y, immediate = true) {\r\n    window.scrollTo(x, y)\r\n\r\n    if (immediate) {\r\n      this.delta = { x, y }\r\n      this.scroll = { x, y }\r\n      this.latestScroll = { x, y }\r\n    }\r\n  }\r\n\r\n  raf = () => {\r\n    if (this.options.autoRaf) {\r\n      requestAnimationFrame(this.raf)\r\n    }\r\n\r\n    if (this.isMoving) {\r\n      this.latestScroll = { x: this.scroll.x, y: this.scroll.y }\r\n      this.scroll = {\r\n        x: lerp(this.scroll.x, this.delta.x, this.lerp),\r\n        y: lerp(this.scroll.y, this.delta.y, this.lerp),\r\n      }\r\n\r\n      this.emit(\"scroll\", {\r\n        scroll: this.scroll,\r\n        delta: this.delta,\r\n        progress: this.progress,\r\n        velocity: this.velocity,\r\n        limit: this.limit,\r\n        currentElements: this.scrollElements.filter(\r\n          (current) => current.inView\r\n        ),\r\n      })\r\n\r\n      if (\r\n        truncate(this.velocity.x, 4) === 0 &&\r\n        truncate(this.velocity.y, 4) === 0\r\n      ) {\r\n        // stop raf when velocity is 0, truncate to 4 decimals to avoid infinite decimals\r\n        this.isMoving = false\r\n      }\r\n\r\n      this.applyTransforms()\r\n    }\r\n  }\r\n\r\n  update = () => {\r\n    console.log(\"lenis update\")\r\n\r\n    this.contentHeight = this.contentElement.offsetHeight\r\n    this.contentWidth = this.contentElement.offsetWidth\r\n\r\n    if (this.smooth) {\r\n      document.body.style.setProperty(\"height\", this.contentHeight + \"px\")\r\n    }\r\n\r\n    this.windowWidth = Math.min(\r\n      document.documentElement.clientWidth,\r\n      window.innerWidth\r\n    )\r\n    this.windowHeight = Math.min(\r\n      document.documentElement.clientHeight,\r\n      window.innerHeight\r\n    )\r\n\r\n    this.limit = {\r\n      x: document.body.clientWidth - this.windowWidth,\r\n      y: document.body.clientHeight - this.windowHeight,\r\n    }\r\n\r\n    // sections\r\n    this.sections = [\r\n      ...this.contentElement.querySelectorAll(\"[data-scroll-section]\"),\r\n    ].map((element) => new Rect(element))\r\n\r\n    // scroll elements (speed, sticky, etc...)\r\n    this.scrollElements = [\r\n      ...this.contentElement.querySelectorAll(\r\n        \"[data-scroll],[data-scroll-speed],[data-scroll-sticky]\"\r\n      ),\r\n    ].map((element) => new ScrollElement(element))\r\n\r\n    this.applyTransforms()\r\n  }\r\n\r\n  applyTransforms() {\r\n    if (this.smooth) {\r\n      if (this.sections.length > 0) {\r\n        this.sections.forEach((current) => {\r\n          const inView = current.computeIntersection(\r\n            this.scroll.x,\r\n            this.scroll.y,\r\n            this.windowHeight / 2 // TODO: add optional margin\r\n          )\r\n          if (inView) {\r\n            current.element.style.removeProperty(\"pointer-events\")\r\n            current.element.style.removeProperty(\"visibility\")\r\n            current.element.style.setProperty(\r\n              \"transform\",\r\n              `translate3d(${-this.scroll.x}px, ${-this.scroll.y}px, 0)`\r\n            )\r\n          } else {\r\n            current.element.style.setProperty(\"pointer-events\", \"none\")\r\n            current.element.style.setProperty(\"visibility\", \"hidden\")\r\n            current.element.style.removeProperty(\"transform\")\r\n          }\r\n        })\r\n      } else {\r\n        this.contentElement.style.setProperty(\r\n          \"transform\",\r\n          `translate3d(${-this.scroll.x}px, ${-this.scroll.y}px, 0)`\r\n        )\r\n      }\r\n    }\r\n\r\n    let inView = false\r\n\r\n    this.scrollElements.forEach((current) => {\r\n      if (this.effects) {\r\n        const scrollRight = this.scroll.x + this.windowWidth\r\n        const scrollBottom = this.scroll.y + this.windowHeight\r\n\r\n        const scrollMiddle = {\r\n          x: this.scroll.x + this.windowWidth / 2,\r\n          y: this.scroll.y + this.windowHeight / 2,\r\n        }\r\n\r\n        let translate = false\r\n\r\n        if (current.speed) {\r\n          // speed\r\n\r\n          const shouldTransform = current.computeIntersection(\r\n            this.scroll.x,\r\n            this.scroll.y,\r\n            this.windowHeight / 2\r\n          )\r\n\r\n          const { top, left, height, width } = current\r\n\r\n          if (shouldTransform) {\r\n            switch (current.position) {\r\n              case \"top\":\r\n                translate = this.scroll.y * -current.speed\r\n                break\r\n\r\n              case \"elementTop\":\r\n                translate = (scrollBottom - top) * -current.speed\r\n                break\r\n\r\n              case \"bottom\":\r\n                translate =\r\n                  (this.limit.y - scrollBottom + this.windowHeight) *\r\n                  current.speed\r\n                break\r\n\r\n              case \"left\":\r\n                translate = this.scroll.x * -current.speed\r\n                break\r\n\r\n              case \"elementLeft\":\r\n                translate = (scrollRight - left) * -current.speed\r\n                break\r\n\r\n              case \"right\":\r\n                translate =\r\n                  (this.limit.x - scrollRight + this.windowHeight) *\r\n                  current.speed\r\n                break\r\n\r\n              default:\r\n                if (this.direction === \"horizontal\") {\r\n                  translate =\r\n                    (scrollMiddle.x - (left + width / 2)) * -current.speed\r\n                } else {\r\n                  translate =\r\n                    (scrollMiddle.y - (top + height / 2)) * -current.speed\r\n                }\r\n                break\r\n            }\r\n          }\r\n\r\n          if (this.direction === \"horizontal\") {\r\n            inView = current.computeIntersection(\r\n              this.scroll.x - translate,\r\n              this.scroll.y\r\n            )\r\n          } else {\r\n            inView = current.computeIntersection(\r\n              this.scroll.x,\r\n              this.scroll.y - translate\r\n            )\r\n          }\r\n        } else if (current.sticky && current.target) {\r\n          // sticky\r\n\r\n          const shouldTransform = current.target.computeIntersection(\r\n            this.scroll.x,\r\n            this.scroll.y,\r\n            this.windowHeight / 2\r\n          )\r\n\r\n          const { height, width, top, left } = current.computeRect(\r\n            this.scroll.x,\r\n            this.scroll.y\r\n          )\r\n\r\n          const {\r\n            top: targetTop,\r\n            height: targetHeight,\r\n            left: targetLeft,\r\n            right: targetRight,\r\n            width: targetWidth,\r\n            bottom: targetBottom,\r\n          } = current.target.computeRect(this.scroll.x, this.scroll.y)\r\n\r\n          let offset = current.offset\r\n\r\n          if (offset.includes(\"center\")) {\r\n            if (this.direction === \"horizontal\") {\r\n              offset[0] = this.windowWidth / 2 - width / 2\r\n              offset[1] = 0\r\n            } else {\r\n              offset[0] = this.windowHeight / 2 - height / 2\r\n              offset[1] = 0\r\n            }\r\n          } else {\r\n            // convert % to px\r\n            offset = offset.map((v) =>\r\n              typeof v === \"string\" && v.includes(\"%\")\r\n                ? (parseFloat(v.replaceAll(\"%\", \"\")) / 100) *\r\n                  (this.direction === \"horizontal\"\r\n                    ? this.windowWidth\r\n                    : this.windowHeight)\r\n                : v\r\n            )\r\n          }\r\n\r\n          offset[0] = parseFloat(offset[0])\r\n          offset[1] = parseFloat(offset[1])\r\n\r\n          if (shouldTransform) {\r\n            if (this.direction === \"horizontal\") {\r\n              translate = clamp(\r\n                0,\r\n                -targetLeft + offset[0],\r\n                targetWidth - width - offset[1] + (targetLeft - left)\r\n              )\r\n            } else {\r\n              translate = clamp(\r\n                0,\r\n                -targetTop + offset[0],\r\n                targetHeight - height - offset[1] + (targetTop - top)\r\n              )\r\n            }\r\n          }\r\n\r\n          if (this.direction === \"horizontal\") {\r\n            inView =\r\n              left + targetWidth > offset[1] && targetRight + targetWidth > 0\r\n          } else {\r\n            inView =\r\n              top + targetHeight > offset[1] && targetBottom + targetHeight > 0\r\n          }\r\n        } else {\r\n          // test inview for any other scroll element\r\n          inView = current.computeIntersection(this.scroll.x, this.scroll.y, 0)\r\n        }\r\n\r\n        // translate element\r\n        if (translate !== false) {\r\n          if (current.delay) {\r\n            // delay\r\n            const start = current.translate || 0\r\n            translate = lerp(start, translate, current.delay)\r\n            current.translate = translate\r\n          }\r\n\r\n          if (\r\n            current.direction === \"horizontal\" ||\r\n            (this.direction === \"horizontal\" &&\r\n              current.direction !== \"vertical\")\r\n          ) {\r\n            current.element.style.setProperty(\r\n              \"transform\",\r\n              `translate3d(${translate}px, 0, 0)`\r\n            )\r\n          } else {\r\n            current.element.style.setProperty(\r\n              \"transform\",\r\n              `translate3d(0, ${translate}px, 0)`\r\n            )\r\n          }\r\n        }\r\n      } else {\r\n        // test inview even if effects are disabled\r\n        inView = current.computeIntersection(this.scroll.x, this.scroll.y, 0)\r\n      }\r\n\r\n      if (current.call && current.inView !== inView) {\r\n        this.emit(\"call\", current.call, inView, current)\r\n      }\r\n\r\n      current.inView = inView\r\n\r\n      if (inView) {\r\n        current.element.classList.add(\"is-inview\")\r\n      } else if (current.repeat) {\r\n        current.element.classList.remove(\"is-inview\")\r\n      }\r\n    })\r\n  }\r\n\r\n  destroy() {\r\n    this.wrapperElement.removeEventListener(\r\n      \"scroll\",\r\n      this.onWrapperScroll,\r\n      false\r\n    )\r\n    document.removeEventListener(\"focus\", this.onFocus, true)\r\n    window.removeEventListener(\"scroll\", this.onScroll, false)\r\n    window.removeEventListener(\"resize\", this.update, false)\r\n\r\n    document.documentElement.classList.remove(\"has-scroll-init\")\r\n    document.documentElement.classList.remove(\"has-scroll-smooth\")\r\n    cancelAnimationFrame(this.raf)\r\n\r\n    document.body.style.removeProperty(\"height\")\r\n\r\n    this.anchors.forEach((element) => {\r\n      element.removeEventListener(\"click\", this.anchorsHandler, false)\r\n    })\r\n    this.anchors = []\r\n\r\n    this.sections.forEach((current) => {\r\n      current.element.style.removeProperty(\"transform\")\r\n      current.element.style.removeProperty(\"pointer-events\")\r\n      current.element.style.removeProperty(\"visibility\")\r\n    })\r\n    this.sections = []\r\n\r\n    this.scrollElements.forEach((current) => {\r\n      current.element.style.removeProperty(\"transform\")\r\n      current.element.classList.remove(\"is-inview\")\r\n    })\r\n    this.scrollElements = []\r\n  }\r\n}\r\n"],"names":["clamp","min","input","max","lerp","start","end","amt","truncate","value","decimals","parseFloat","toFixed","offsetTop","element","accumulator","top","offsetParent","offsetLeft","left","Rect","constructor","this","update","windowWidth","Math","document","documentElement","clientWidth","window","innerWidth","windowHeight","clientHeight","innerHeight","width","height","getBoundingClientRect","right","bottom","computeRect","x","y","computeIntersection","margin","rect","ScrollElement","super","let","speed","getAttribute","isNaN","inView","call","delay","repeat","direction","position","sticky","offset","replaceAll","split","map","includes","v","Array","fill","_","i","target","querySelector","defaultOptions","autoRaf","smooth","effects","Lenis","EventEmitter","options","content","setMaxListeners","Infinity","wrapper","classList","add","wrapperElement","addEventListener","onWrapperScroll","contentElement","delta","scrollX","scrollY","scroll","latestScroll","onScroll","onFocus","anchors","querySelectorAll","anchorsHandler","event","preventDefault","selector","currentTarget","scrollTo","forEach","requestAnimationFrame","raf","console","warn","velocity","progress","limit","parseInt","immediate","tagName","setScroll","isMoving","offsetHeight","emit","currentElements","scrollElements","filter","current","applyTransforms","log","contentHeight","contentWidth","offsetWidth","body","style","setProperty","sections","length","removeProperty","scrollRight","scrollBottom","scrollMiddle","translate","shouldTransform","targetTop","targetHeight","targetLeft","targetRight","targetWidth","targetBottom","remove","destroy","removeEventListener","cancelAnimationFrame"],"mappings":"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"}