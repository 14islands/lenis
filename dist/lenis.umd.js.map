{"version":3,"file":"lenis.umd.js","sources":["../src/lenis.js","../src/maths.js"],"sourcesContent":["import EventEmitter from 'tiny-emitter'\r\nimport VirtualScroll from 'virtual-scroll'\r\nimport { clamp, lerp } from './maths.js'\r\n\r\nexport default class Lenis extends EventEmitter {\r\n  constructor({ lerp = 0.1, smooth = true, direction = 'vertical' } = {}) {\r\n    super()\r\n\r\n    this.lerp = lerp\r\n    this.smooth = smooth\r\n    this.direction = direction\r\n\r\n    window.addEventListener('scroll', this.onScroll, false)\r\n    window.addEventListener('resize', this.onWindowResize, false)\r\n\r\n    const platform =\r\n      navigator?.userAgentData?.platform || navigator?.platform || 'unknown'\r\n\r\n    // listen and normalize wheel event cross-browser\r\n    this.virtualScroll = new VirtualScroll({\r\n      firefoxMultiplier: 50,\r\n      mouseMultiplier: platform.indexOf('Win') > -1 ? 1 : 0.4,\r\n      useKeyboard: false,\r\n      useTouch: false,\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll.on(this.onVirtualScroll)\r\n\r\n    this.onWindowResize()\r\n    this.limit =\r\n      this.direction === 'horizontal'\r\n        ? document.body.offsetWidth - this.windowWidth\r\n        : document.body.offsetHeight - this.windowHeight\r\n\r\n    // recalculate maxScroll when body height changes\r\n    this.resizeObserver = new ResizeObserver(this.onResize)\r\n    this.resizeObserver.observe(document.body)\r\n\r\n    this.targetScroll = this.scroll =\r\n      this.direction === 'horizontal' ? window.scrollX : window.scrollY\r\n    this.velocity = 0\r\n  }\r\n\r\n  start() {\r\n    this.stopped = false\r\n  }\r\n\r\n  stop() {\r\n    this.stopped = true\r\n  }\r\n\r\n  destroy() {\r\n    window.removeEventListener('scroll', this.onScroll, false)\r\n    window.removeEventListener('resize', this.onWindowResize, false)\r\n    this.virtualScroll.destroy()\r\n    this.resizeObserver.disconnect()\r\n  }\r\n\r\n  onResize = (entries) => {\r\n    const entry = entries[0]\r\n    if (entry) {\r\n      const rect = entry.contentRect\r\n      this.limit =\r\n        this.direction === 'horizontal'\r\n          ? rect.width - this.windowWidth\r\n          : rect.height - this.windowHeight\r\n    }\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    this.windowHeight = window.innerHeight\r\n    this.windowWidth = window.innerWidth\r\n  }\r\n\r\n  onVirtualScroll = ({ deltaY, originalEvent: e }) => {\r\n    if (this.stopped) {\r\n      e.preventDefault()\r\n      return\r\n    }\r\n\r\n    // prevent native wheel scrolling\r\n    if (this.smooth && !e.ctrlKey) e.preventDefault()\r\n\r\n    this.targetScroll -= deltaY\r\n    this.targetScroll = clamp(0, this.targetScroll, this.limit)\r\n  }\r\n\r\n  raf() {\r\n    if (this.stopped || !this.smooth) return\r\n    // where smooth scroll happens\r\n\r\n    let lastScroll = this.scroll\r\n\r\n    // lerp scroll value\r\n    this.scroll = lerp(this.scroll, this.targetScroll, this.lerp)\r\n    if (Math.round(this.scroll) === Math.round(this.targetScroll)) {\r\n      this.scroll = lastScroll = this.targetScroll\r\n    }\r\n\r\n    this.velocity = this.scroll - lastScroll\r\n\r\n    if (this.scrolling) {\r\n      // scroll to lerped scroll value\r\n      this.direction === 'horizontal'\r\n        ? window.scrollTo(this.scroll, 0)\r\n        : window.scrollTo(0, this.scroll)\r\n      this.notify()\r\n    }\r\n\r\n    this.scrolling = this.scroll !== this.targetScroll\r\n  }\r\n\r\n  onScroll = (e) => {\r\n    if (this.stopped) return\r\n\r\n    // if scrolling is false we can estimate use isn't scrolling with wheel (cmd+F, keyboard or whatever). So we must scroll to without any easing\r\n    if (!this.scrolling || !this.smooth) {\r\n      // where native scroll happens\r\n\r\n      const lastScroll = this.scroll\r\n      this.targetScroll = this.scroll =\r\n        this.direction === 'horizontal' ? window.scrollX : window.scrollY\r\n      this.velocity = this.scroll - lastScroll\r\n      this.notify()\r\n    }\r\n  }\r\n\r\n  notify() {\r\n    this.emit('scroll', {\r\n      scroll: this.scroll,\r\n      limit: this.limit,\r\n      velocity: this.velocity,\r\n    })\r\n  }\r\n\r\n  scrollTo(target, { offset = 0 } = {}) {\r\n    let value\r\n\r\n    if (typeof target === 'number') {\r\n      // Number\r\n      value = target\r\n    } else if (target === '#top') {\r\n      value = 0\r\n    } else if (target === '#bottom') {\r\n      value = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      } else {\r\n        return\r\n      }\r\n\r\n      if (!target) return\r\n      const rect = node.getBoundingClientRect()\r\n      value =\r\n        (this.direction === 'horizontal' ? rect.left : rect.top) + this.scroll\r\n    }\r\n\r\n    value += offset\r\n\r\n    this.targetScroll = value\r\n    this.scrolling = true\r\n    if (!this.smooth) {\r\n      this.scroll = value\r\n      if (this.direction === 'horizontal') {\r\n        window.scrollTo(this.scroll, 0)\r\n      } else {\r\n        window.scrollTo(0, this.scroll)\r\n      }\r\n    }\r\n  }\r\n}\r\n","export function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\nexport function mapRange(in_min, in_max, input, out_min, out_max) {\r\n  return ((input - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\r\n}\r\n\r\nexport function lerp(start, end, amt) {\r\n  return (1 - amt) * start + amt * end\r\n}\r\n\r\nexport function truncate(value, decimals) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n"],"names":["_navigator","_navigator$userAgentD","_navigator2","_this","_ref","_temp","lerp","_ref$lerp","smooth","_ref$smooth","direction","_ref$direction","_EventEmitter","call","this","onResize","entries","entry","contentRect","limit","rect","width","windowWidth","height","windowHeight","onWindowResize","window","innerHeight","innerWidth","onVirtualScroll","_ref2","deltaY","e","originalEvent","stopped","preventDefault","ctrlKey","targetScroll","Math","max","min","onScroll","scrolling","lastScroll","scroll","scrollX","scrollY","velocity","notify","addEventListener","platform","navigator","userAgentData","virtualScroll","VirtualScroll","firefoxMultiplier","mouseMultiplier","indexOf","useKeyboard","useTouch","passive","on","document","body","offsetWidth","offsetHeight","resizeObserver","ResizeObserver","observe","start","stop","destroy","removeEventListener","disconnect","raf","amt","round","scrollTo","emit","target","_temp2","offset","_ref3$offset","value","node","querySelector","nodeType","getBoundingClientRect","left","top","EventEmitter"],"mappings":"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"}