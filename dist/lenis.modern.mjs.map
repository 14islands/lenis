{"version":3,"file":"lenis.modern.mjs","sources":["../src/lenis.js","../src/maths.js"],"sourcesContent":["import EventEmitter from 'tiny-emitter'\nimport VirtualScroll from 'virtual-scroll'\nimport { clamp, lerp } from './maths.js'\n\nexport default class Lenis extends EventEmitter {\n  constructor({\n    lerp = 0.1,\n    smooth = true,\n    direction = 'vertical',\n    wrapper = window,\n    content = document.body,\n  } = {}) {\n    super()\n\n    this.wrapperNode = wrapper\n    this.contentNode = content\n\n    this.lerp = lerp\n    this.smooth = smooth\n    this.direction = direction\n\n    this.wrapperNode.addEventListener('scroll', this.onScroll)\n\n    const platform =\n      navigator?.userAgentData?.platform || navigator?.platform || 'unknown'\n\n    // listen and normalize wheel event cross-browser\n    this.virtualScroll = new VirtualScroll({\n      el: this.wrapperNode,\n      firefoxMultiplier: 50,\n      mouseMultiplier: platform.indexOf('Win') > -1 ? 1 : 0.4,\n      useKeyboard: false,\n      useTouch: false,\n      passive: false,\n    })\n\n    this.virtualScroll.on(this.onVirtualScroll)\n\n    //observe wrapper node size\n    if (this.wrapperNode === window) {\n      this.wrapperNode.addEventListener('resize', this.onWindowResize)\n      this.onWindowResize()\n    } else {\n      this.wrapperHeight = this.wrapperNode.offsetHeight\n      this.wrapperWidth = this.wrapperNode.offsetWidth\n\n      //observe wrapper node size\n      this.wrapperObserver = new ResizeObserver(this.onWrapperResize)\n      this.wrapperObserver.observe(this.wrapperNode)\n    }\n\n    this.contentHeight = this.contentNode.offsetHeight\n    this.contentWidth = this.contentNode.offsetWidth\n\n    //observe content node size\n    this.contentObserver = new ResizeObserver(this.onContentResize)\n    this.contentObserver.observe(this.contentNode)\n\n    //set initial scroll position\n    this.targetScroll = this.scroll = this.wrapperNode[this.scrollProperty]\n\n    this.velocity = 0\n  }\n\n  get scrollProperty() {\n    let property\n    if (this.wrapperNode === window) {\n      property = this.direction === 'horizontal' ? 'scrollX' : 'scrollY'\n    } else {\n      property = this.direction === 'horizontal' ? 'scrollLeft' : 'scrollTop'\n    }\n    return property\n  }\n\n  start() {\n    this.stopped = false\n  }\n\n  stop() {\n    this.stopped = true\n  }\n\n  destroy() {\n    if (this.wrapperNode === window) {\n      this.wrapperNode.removeEventListener('resize', this.onWindowResize)\n    }\n    this.wrapperNode.removeEventListener('scroll', this.onScroll)\n\n    this.virtualScroll.destroy()\n    this.wrapperObserver?.disconnect()\n    this.contentObserver.disconnect()\n  }\n\n  onWindowResize = () => {\n    this.wrapperWidth = window.innerWidth\n    this.wrapperHeight = window.innerHeight\n  }\n\n  onWrapperResize = ([entry]) => {\n    if (entry) {\n      const rect = entry.contentRect\n      this.wrapperWidth = rect.width\n      this.wrapperHeight = rect.height\n    }\n  }\n\n  onContentResize = ([entry]) => {\n    if (entry) {\n      const rect = entry.contentRect\n      this.contentWidth = rect.width\n      this.contentHeight = rect.height\n    }\n  }\n\n  get limit() {\n    return this.direction === 'horizontal'\n      ? this.contentWidth - this.wrapperWidth\n      : this.contentHeight - this.wrapperHeight\n  }\n\n  onVirtualScroll = ({ deltaY, originalEvent: e }) => {\n    if (e.ctrlKey) return\n\n    if (this.stopped) {\n      e.preventDefault()\n      return\n    }\n\n    // prevent native wheel scrolling\n    if (this.smooth) e.preventDefault()\n\n    this.targetScroll -= deltaY\n    this.targetScroll = clamp(0, this.targetScroll, this.limit)\n  }\n\n  raf() {\n    if (this.stopped || !this.smooth) return\n    // where smooth scroll happens\n\n    let lastScroll = this.scroll\n\n    // lerp scroll value\n    this.scroll = lerp(this.scroll, this.targetScroll, this.lerp)\n    if (Math.round(this.scroll) === Math.round(this.targetScroll)) {\n      this.scroll = lastScroll = this.targetScroll\n    }\n\n    this.velocity = this.scroll - lastScroll\n\n    if (this.isScrolling) {\n      // scroll to lerped scroll value\n      this.setScroll(this.scroll)\n      this.notify()\n    }\n\n    this.isScrolling = this.scroll !== this.targetScroll\n  }\n\n  setScroll(value) {\n    this.direction === 'horizontal'\n      ? this.wrapperNode.scrollTo(value, 0)\n      : this.wrapperNode.scrollTo(0, value)\n  }\n\n  onScroll = () => {\n    // if scrolling is false we can estimate user isn't scrolling with wheel (cmd+F, keyboard or whatever). So we must scroll to without any easing\n    if (!this.isScrolling || !this.smooth) {\n      // where native scroll happens\n      this.targetScroll = this.scroll = this.wrapperNode[this.scrollProperty]\n      // velocity is not reliable in this context\n      this.velocity = 0\n\n      this.notify()\n    }\n  }\n\n  notify() {\n    this.emit('scroll', {\n      scroll: this.scroll,\n      limit: this.limit,\n      velocity: this.velocity,\n      direction: this.direction,\n      progress: this.scroll / this.limit,\n    })\n  }\n\n  scrollTo(target, { offset = 0, immediate = false } = {}) {\n    let value\n\n    if (typeof target === 'number') {\n      // Number\n      value = target\n    } else if (target === 'top') {\n      value = 0\n    } else if (target === 'bottom') {\n      value = this.limit\n    } else {\n      let node\n\n      if (typeof target === 'string') {\n        // CSS selector\n        node = document.querySelector(target)\n      } else if (target?.nodeType) {\n        // Node element\n        node = target\n      } else {\n        return\n      }\n\n      if (!target) return\n      let wrapperOffset = 0\n\n      if (this.wrapperNode !== window) {\n        const wrapperRect = this.wrapperNode.getBoundingClientRect()\n        wrapperOffset =\n          this.direction === 'horizontal' ? wrapperRect.left : wrapperRect.top\n      }\n      const rect = node.getBoundingClientRect()\n\n      value =\n        (this.direction === 'horizontal' ? rect.left : rect.top) +\n        this.scroll -\n        wrapperOffset\n    }\n\n    value += offset\n\n    this.targetScroll = value\n    this.isScrolling = true\n\n    if (!this.smooth || immediate) {\n      this.scroll = value\n      this.setScroll(this.scroll)\n    }\n  }\n}\n","export function clamp(min, input, max) {\n  return Math.max(min, Math.min(input, max))\n}\n\nexport function mapRange(in_min, in_max, input, out_min, out_max) {\n  return ((input - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\n}\n\nexport function lerp(start, end, amt) {\n  return (1 - amt) * start + amt * end\n}\n\nexport function truncate(value, decimals) {\n  return parseFloat(value.toFixed(decimals))\n}\n"],"names":["Lenis","EventEmitter","constructor","lerp","smooth","direction","wrapper","window","content","document","body","_navigator","_navigator$userAgentD","_navigator2","super","this","onWindowResize","wrapperWidth","innerWidth","wrapperHeight","innerHeight","onWrapperResize","entry","rect","contentRect","width","height","onContentResize","contentWidth","contentHeight","onVirtualScroll","deltaY","originalEvent","e","ctrlKey","stopped","preventDefault","targetScroll","Math","max","min","limit","onScroll","isScrolling","scroll","wrapperNode","scrollProperty","velocity","notify","contentNode","addEventListener","platform","navigator","userAgentData","virtualScroll","VirtualScroll","el","firefoxMultiplier","mouseMultiplier","indexOf","useKeyboard","useTouch","passive","on","offsetHeight","offsetWidth","wrapperObserver","observe","contentObserver","ResizeObserver","property","start","stop","destroy","_this$wrapperObserver","removeEventListener","disconnect","raf","lastScroll","amt","round","setScroll","value","scrollTo","emit","progress","target","offset","immediate","node","querySelector","nodeType","wrapperOffset","getBoundingClientRect","wrapperRect","left","top"],"mappings":"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"}