{"version":3,"file":"lenis.modern.mjs","sources":["../src/lenis.js","../src/maths.js"],"sourcesContent":["import EventEmitter from 'tiny-emitter'\r\nimport VirtualScroll from 'virtual-scroll'\r\nimport { version } from '../package.json'\r\nimport { clamp } from './maths.js'\r\n\r\nclass Animate {\r\n  to(target, { duration = 1, easing = (t) => t, ...keys } = {}) {\r\n    this.target = target\r\n    this.fromKeys = { ...keys }\r\n    this.toKeys = { ...keys }\r\n    this.keys = Object.keys({ ...keys })\r\n\r\n    // get initial values\r\n    this.keys.forEach((key) => {\r\n      this.fromKeys[key] = target[key]\r\n    })\r\n\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.currentTime = 0\r\n    this.isRunning = true\r\n  }\r\n\r\n  stop() {\r\n    this.isRunning = false\r\n  }\r\n\r\n  raf(deltaTime) {\r\n    if (!this.isRunning) return\r\n\r\n    this.currentTime = Math.min(\r\n      this.currentTime + deltaTime * 0.001,\r\n      this.duration\r\n    )\r\n\r\n    const progress = this.easing(this.progress)\r\n\r\n    this.keys.forEach((key) => {\r\n      const from = this.fromKeys[key]\r\n      const to = this.toKeys[key]\r\n\r\n      const value = from + (to - from) * progress\r\n\r\n      this.target[key] = value\r\n    })\r\n\r\n    if (progress === 1) {\r\n      this.isRunning = false\r\n    }\r\n  }\r\n\r\n  get progress() {\r\n    return this.currentTime / this.duration\r\n  }\r\n}\r\n\r\nexport default class Lenis extends EventEmitter {\r\n  constructor({\r\n    duration = 1.2,\r\n    easing = (t) => (t === 1 ? 1 : 1 - Math.pow(2, -10 * t)), // https://easings.net/en#easeOutExpo\r\n    smooth = true,\r\n    smoothTouch = false,\r\n    touchMultiplier = 2,\r\n    direction = 'vertical',\r\n    wrapper = window,\r\n    content = document.body,\r\n  } = {}) {\r\n    super()\r\n\r\n    window.lenisVersion = version\r\n\r\n    this.options = {\r\n      duration,\r\n      easing,\r\n      smooth,\r\n      smoothTouch,\r\n      touchMultiplier,\r\n      direction,\r\n      wrapper,\r\n      content,\r\n    }\r\n\r\n    this.wrapperNode = wrapper\r\n    this.contentNode = content\r\n\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.smooth = smooth\r\n    this.smoothTouch = smoothTouch\r\n    this.touchMultiplier = touchMultiplier\r\n    this.direction = direction\r\n\r\n    this.wrapperNode.addEventListener('scroll', this.onScroll)\r\n\r\n    //observe wrapper node size\r\n    if (this.wrapperNode === window) {\r\n      this.wrapperNode.addEventListener('resize', this.onWindowResize)\r\n      this.onWindowResize()\r\n    } else {\r\n      this.wrapperHeight = this.wrapperNode.offsetHeight\r\n      this.wrapperWidth = this.wrapperNode.offsetWidth\r\n\r\n      //observe wrapper node size\r\n      this.wrapperObserver = new ResizeObserver(this.onWrapperResize)\r\n      this.wrapperObserver.observe(this.wrapperNode)\r\n    }\r\n\r\n    this.contentHeight = this.contentNode.offsetHeight\r\n    this.contentWidth = this.contentNode.offsetWidth\r\n\r\n    //observe content node size\r\n    this.contentObserver = new ResizeObserver(this.onContentResize)\r\n    this.contentObserver.observe(this.contentNode)\r\n\r\n    //set initial scroll position\r\n    this.targetScroll =\r\n      this.scroll =\r\n      this.lastScroll =\r\n        this.wrapperNode[this.scrollProperty]\r\n\r\n    this.animate = new Animate()\r\n\r\n    const platform =\r\n      navigator?.userAgentData?.platform || navigator?.platform || 'unknown'\r\n\r\n    // listen and normalize wheel event cross-browser\r\n    this.virtualScroll = new VirtualScroll({\r\n      el: this.wrapperNode,\r\n      firefoxMultiplier: 50,\r\n      mouseMultiplier: platform.includes('Win') ? 1 : 0.4,\r\n      useKeyboard: false,\r\n      touchMultiplier: this.touchMultiplier,\r\n      useTouch: true,\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll.on(this.onVirtualScroll)\r\n  }\r\n\r\n  get scrollProperty() {\r\n    let property\r\n    if (this.wrapperNode === window) {\r\n      property = this.direction === 'horizontal' ? 'scrollX' : 'scrollY'\r\n    } else {\r\n      property = this.direction === 'horizontal' ? 'scrollLeft' : 'scrollTop'\r\n    }\r\n    return property\r\n  }\r\n\r\n  start() {\r\n    this.stopped = false\r\n  }\r\n\r\n  stop() {\r\n    this.stopped = true\r\n    // TODO: stop scroll animation\r\n    this.animate.stop()\r\n  }\r\n\r\n  destroy() {\r\n    if (this.wrapperNode === window) {\r\n      this.wrapperNode.removeEventListener('resize', this.onWindowResize)\r\n    }\r\n    this.wrapperNode.removeEventListener('scroll', this.onScroll)\r\n\r\n    this.virtualScroll.destroy()\r\n    this.wrapperObserver?.disconnect()\r\n    this.contentObserver.disconnect()\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    this.wrapperWidth = window.innerWidth\r\n    this.wrapperHeight = window.innerHeight\r\n  }\r\n\r\n  onWrapperResize = ([entry]) => {\r\n    if (entry) {\r\n      const rect = entry.contentRect\r\n      this.wrapperWidth = rect.width\r\n      this.wrapperHeight = rect.height\r\n    }\r\n  }\r\n\r\n  onContentResize = ([entry]) => {\r\n    if (entry) {\r\n      const rect = entry.contentRect\r\n      this.contentWidth = rect.width\r\n      this.contentHeight = rect.height\r\n    }\r\n  }\r\n\r\n  get limit() {\r\n    return this.direction === 'horizontal'\r\n      ? this.contentWidth - this.wrapperWidth\r\n      : this.contentHeight - this.wrapperHeight\r\n  }\r\n\r\n  onVirtualScroll = ({ deltaY, originalEvent: e }) => {\r\n    if (e.ctrlKey) return\r\n\r\n    // switch to smooth if event is touch and touch is true\r\n    this.smooth = !!e.changedTouches ? this.smoothTouch : this.options.smooth\r\n\r\n    if (this.stopped) {\r\n      e.preventDefault()\r\n      return\r\n    }\r\n\r\n    if (!this.smooth) return\r\n\r\n    // fix wheel holding scroll https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\r\n    if (e.buttons === 4) return\r\n\r\n    // prevent native wheel scrolling\r\n    if (this.smooth) e.preventDefault()\r\n\r\n    this.targetScroll -= deltaY\r\n    this.targetScroll = clamp(0, this.targetScroll, this.limit)\r\n\r\n    this.scrollTo(this.targetScroll)\r\n  }\r\n\r\n  raf(now) {\r\n    const deltaTime = now - (this.now || 0)\r\n    this.now = now\r\n\r\n    if (this.stopped || !this.smooth) return\r\n\r\n    this.lastScroll = this.scroll\r\n\r\n    // where this.scroll is updated\r\n    this.animate.raf(deltaTime)\r\n\r\n    if (this.scroll === this.targetScroll) {\r\n      // if target reached velocity should be 0\r\n      this.lastScroll = this.scroll\r\n    }\r\n\r\n    if (this.isScrolling) {\r\n      this.setScroll(this.scroll)\r\n      this.notify()\r\n    }\r\n\r\n    this.isScrolling = this.scroll !== this.targetScroll\r\n  }\r\n\r\n  get velocity() {\r\n    return this.scroll - this.lastScroll\r\n  }\r\n\r\n  setScroll(value) {\r\n    this.direction === 'horizontal'\r\n      ? this.wrapperNode.scrollTo(value, 0)\r\n      : this.wrapperNode.scrollTo(0, value)\r\n  }\r\n\r\n  onScroll = (e) => {\r\n    // if isScrolling false we can consider user isn't scrolling with wheel (cmd+F, keyboard or whatever). So we must scroll to value immediately\r\n    if (!this.isScrolling || !this.smooth) {\r\n      // where native scroll happens\r\n      this.targetScroll =\r\n        this.scroll =\r\n        this.lastScroll =\r\n          this.wrapperNode[this.scrollProperty]\r\n\r\n      this.notify()\r\n    }\r\n  }\r\n\r\n  notify() {\r\n    this.emit('scroll', {\r\n      scroll: this.scroll,\r\n      limit: this.limit,\r\n      velocity: this.velocity,\r\n      direction: this.direction,\r\n      progress: this.scroll / this.limit,\r\n    })\r\n  }\r\n\r\n  scrollTo(\r\n    target,\r\n    {\r\n      offset = 0,\r\n      immediate = false,\r\n      duration = this.duration,\r\n      easing = this.easing,\r\n    } = {}\r\n  ) {\r\n    let value\r\n\r\n    if (typeof target === 'number') {\r\n      value = target\r\n    } else if (target === 'top' || target === '#top') {\r\n      value = 0\r\n    } else if (target === 'bottom') {\r\n      value = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      } else {\r\n        return\r\n      }\r\n\r\n      if (!target) return\r\n      let wrapperOffset = 0\r\n\r\n      if (this.wrapperNode !== window) {\r\n        const wrapperRect = this.wrapperNode.getBoundingClientRect()\r\n        wrapperOffset =\r\n          this.direction === 'horizontal' ? wrapperRect.left : wrapperRect.top\r\n      }\r\n\r\n      const rect = node.getBoundingClientRect()\r\n\r\n      value =\r\n        (this.direction === 'horizontal' ? rect.left : rect.top) +\r\n        this.scroll -\r\n        wrapperOffset\r\n    }\r\n\r\n    value += offset\r\n\r\n    this.targetScroll = value\r\n\r\n    if (!this.smooth || immediate) {\r\n      this.setScroll(this.targetScroll)\r\n    } else {\r\n      this.animate.to(this, {\r\n        duration,\r\n        easing,\r\n        scroll: this.targetScroll,\r\n      })\r\n    }\r\n  }\r\n}\r\n","export function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\nexport function mapRange(in_min, in_max, input, out_min, out_max) {\r\n  return ((input - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\r\n}\r\n\r\nexport function lerp(start, end, amt) {\r\n  return (1 - amt) * start + amt * end\r\n}\r\n\r\nexport function truncate(value, decimals) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n"],"names":["_excluded","to","target","_ref","duration","easing","t","keys","_objectWithoutPropertiesLoose","this","fromKeys","toKeys","Object","forEach","key","currentTime","isRunning","stop","raf","deltaTime","Math","min","progress","from","Lenis","EventEmitter","constructor","pow","smooth","smoothTouch","touchMultiplier","direction","wrapper","window","content","document","body","_navigator","_navigator$userAgentD","_navigator2","super","onWindowResize","wrapperWidth","innerWidth","wrapperHeight","innerHeight","onWrapperResize","entry","rect","contentRect","width","height","onContentResize","contentWidth","contentHeight","onVirtualScroll","deltaY","originalEvent","e","ctrlKey","changedTouches","options","stopped","preventDefault","buttons","targetScroll","max","limit","scrollTo","onScroll","isScrolling","scroll","lastScroll","wrapperNode","scrollProperty","notify","lenisVersion","contentNode","addEventListener","offsetHeight","offsetWidth","wrapperObserver","ResizeObserver","observe","contentObserver","animate","platform","navigator","userAgentData","virtualScroll","VirtualScroll","el","firefoxMultiplier","mouseMultiplier","includes","useKeyboard","useTouch","passive","on","property","start","destroy","_this$wrapperObserver","removeEventListener","disconnect","now","setScroll","velocity","value","emit","offset","immediate","node","querySelector","nodeType","wrapperOffset","wrapperRect","getBoundingClientRect","left","top"],"mappings":"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"}