{"version":3,"file":"lenis.modern.mjs","sources":["../src/lenis.js","../src/maths.js"],"sourcesContent":["import EventEmitter from 'tiny-emitter'\nimport VirtualScroll from 'virtual-scroll'\nimport { version } from '../package.json'\nimport { clamp } from './maths.js'\n\n// simple animation tool\nclass Animate {\n  to(target, { duration = 1, easing = (t) => t, ...keys } = {}) {\n    this.target = target\n    this.fromKeys = { ...keys }\n    this.toKeys = { ...keys }\n    this.keys = Object.keys({ ...keys })\n\n    // get initial values\n    this.keys.forEach((key) => {\n      this.fromKeys[key] = target[key]\n    })\n\n    this.duration = duration\n    this.easing = easing\n    this.currentTime = 0\n    this.isRunning = true\n  }\n\n  raf(deltaTime) {\n    if (!this.isRunning) return\n\n    this.currentTime = Math.min(\n      this.currentTime + deltaTime * 0.001,\n      this.duration\n    )\n\n    const progress = this.easing(this.progress)\n\n    this.keys.forEach((key) => {\n      const from = this.fromKeys[key]\n      const to = this.toKeys[key]\n      const value = from + (to - from) * progress\n      this.target[key] = value\n    })\n\n    if (progress === 1) {\n      this.isRunning = false\n    }\n  }\n\n  get progress() {\n    return this.currentTime / this.duration\n  }\n}\n\nexport default class Lenis extends EventEmitter {\n  constructor({\n    duration = 1.2,\n    easing = (t) => (t === 1 ? 1 : 1 - Math.pow(2, -10 * t)), //expo.out\n    smooth = true,\n    direction = 'vertical',\n    wrapper = window,\n    content = document.body,\n  } = {}) {\n    super()\n\n    if (arguments[0].lerp !== undefined) {\n      console.warn(\n        'Lenis: lerp option is deprecated, you must use duration and easing options instead. See documentation https://github.com/studio-freight/lenis'\n      )\n    }\n\n    window.lenisVersion = version\n\n    this.wrapperNode = wrapper\n    this.contentNode = content\n\n    this.duration = duration\n    this.easing = easing\n    this.smooth = smooth\n    this.direction = direction\n\n    this.animate = new Animate()\n\n    this.wrapperNode.addEventListener('scroll', this.onScroll)\n\n    const platform =\n      navigator?.userAgentData?.platform || navigator?.platform || 'unknown'\n\n    // listen and normalize wheel event cross-browser\n    this.virtualScroll = new VirtualScroll({\n      el: this.wrapperNode,\n      firefoxMultiplier: 50,\n      mouseMultiplier: platform.indexOf('Win') > -1 ? 1 : 0.4,\n      useKeyboard: false,\n      useTouch: false,\n      passive: false,\n    })\n\n    this.virtualScroll.on(this.onVirtualScroll)\n\n    //observe wrapper node size\n    if (this.wrapperNode === window) {\n      this.wrapperNode.addEventListener('resize', this.onWindowResize)\n      this.onWindowResize()\n    } else {\n      this.wrapperHeight = this.wrapperNode.offsetHeight\n      this.wrapperWidth = this.wrapperNode.offsetWidth\n\n      //observe wrapper node size\n      this.wrapperObserver = new ResizeObserver(this.onWrapperResize)\n      this.wrapperObserver.observe(this.wrapperNode)\n    }\n\n    this.contentHeight = this.contentNode.offsetHeight\n    this.contentWidth = this.contentNode.offsetWidth\n\n    //observe content node size\n    this.contentObserver = new ResizeObserver(this.onContentResize)\n    this.contentObserver.observe(this.contentNode)\n\n    //set initial scroll position\n    this.targetScroll =\n      this.scroll =\n      this.lastScroll =\n        this.wrapperNode[this.scrollProperty]\n  }\n\n  get scrollProperty() {\n    let property\n    if (this.wrapperNode === window) {\n      property = this.direction === 'horizontal' ? 'scrollX' : 'scrollY'\n    } else {\n      property = this.direction === 'horizontal' ? 'scrollLeft' : 'scrollTop'\n    }\n    return property\n  }\n\n  start() {\n    this.stopped = false\n  }\n\n  stop() {\n    this.stopped = true\n  }\n\n  destroy() {\n    if (this.wrapperNode === window) {\n      this.wrapperNode.removeEventListener('resize', this.onWindowResize)\n    }\n    this.wrapperNode.removeEventListener('scroll', this.onScroll)\n\n    this.virtualScroll.destroy()\n    this.wrapperObserver?.disconnect()\n    this.contentObserver.disconnect()\n  }\n\n  onWindowResize = () => {\n    this.wrapperWidth = window.innerWidth\n    this.wrapperHeight = window.innerHeight\n  }\n\n  onWrapperResize = ([entry]) => {\n    if (entry) {\n      const rect = entry.contentRect\n      this.wrapperWidth = rect.width\n      this.wrapperHeight = rect.height\n    }\n  }\n\n  onContentResize = ([entry]) => {\n    if (entry) {\n      const rect = entry.contentRect\n      this.contentWidth = rect.width\n      this.contentHeight = rect.height\n    }\n  }\n\n  get limit() {\n    return this.direction === 'horizontal'\n      ? this.contentWidth - this.wrapperWidth\n      : this.contentHeight - this.wrapperHeight\n  }\n\n  onVirtualScroll = ({ deltaY, originalEvent: e }) => {\n    if (e.ctrlKey || !this.smooth) return\n\n    if (this.stopped) {\n      e.preventDefault()\n      return\n    }\n\n    // prevent native wheel scrolling\n    if (this.smooth) e.preventDefault()\n\n    this.targetScroll -= deltaY\n    this.targetScroll = clamp(0, this.targetScroll, this.limit)\n\n    this.scrollTo(this.targetScroll)\n  }\n\n  raf(deltaTime) {\n    if (this.stopped || !this.smooth) return\n\n    // where smooth scroll happens\n    this.lastScroll = this.scroll\n\n    this.animate.raf(deltaTime)\n\n    // fixes velocity when sometimes final native event is not notified\n    if (Math.round(this.scroll) === Math.round(this.targetScroll)) {\n      this.lastScroll = this.targetScroll\n    }\n\n    if (this.isScrolling) {\n      this.setScroll(this.scroll)\n      this.notify()\n    }\n\n    this.isScrolling = this.scroll !== this.targetScroll\n  }\n\n  get velocity() {\n    return this.scroll - this.lastScroll\n  }\n\n  setScroll(value) {\n    this.direction === 'horizontal'\n      ? this.wrapperNode.scrollTo(value, 0)\n      : this.wrapperNode.scrollTo(0, value)\n  }\n\n  onScroll = () => {\n    // if isScrolling false we can consider user isn't scrolling with wheel (cmd+F, keyboard or whatever). So we must scroll to value immediately\n    if (!this.isScrolling || !this.smooth) {\n      // where native scroll happens\n      this.targetScroll =\n        this.scroll =\n        this.lastScroll =\n          this.wrapperNode[this.scrollProperty]\n\n      this.notify()\n    }\n  }\n\n  notify() {\n    this.emit('scroll', {\n      scroll: this.scroll,\n      limit: this.limit,\n      velocity: this.velocity,\n      direction: this.direction,\n      progress: this.scroll / this.limit,\n    })\n  }\n\n  scrollTo(\n    target,\n    {\n      offset = 0,\n      immediate = false,\n      duration = this.duration,\n      easing = this.easing,\n    } = {}\n  ) {\n    let value\n\n    if (typeof target === 'number') {\n      // Number\n      value = target\n    } else if (target === 'top' || '#top') {\n      value = 0\n    } else if (target === 'bottom') {\n      value = this.limit\n    } else {\n      let node\n\n      if (typeof target === 'string') {\n        // CSS selector\n        node = document.querySelector(target)\n      } else if (target?.nodeType) {\n        // Node element\n        node = target\n      } else {\n        return\n      }\n\n      if (!target) return\n      let wrapperOffset = 0\n\n      if (this.wrapperNode !== window) {\n        const wrapperRect = this.wrapperNode.getBoundingClientRect()\n        wrapperOffset =\n          this.direction === 'horizontal' ? wrapperRect.left : wrapperRect.top\n      }\n\n      const rect = node.getBoundingClientRect()\n\n      value =\n        (this.direction === 'horizontal' ? rect.left : rect.top) +\n        this.scroll -\n        wrapperOffset\n    }\n\n    value += offset\n\n    this.targetScroll = value\n\n    if (!this.smooth || immediate) {\n      this.setScroll(this.targetScroll)\n    } else {\n      this.animate.to(this, {\n        duration,\n        easing,\n        scroll: this.targetScroll,\n      })\n    }\n  }\n}\n","export function clamp(min, input, max) {\n  return Math.max(min, Math.min(input, max))\n}\n\nexport function mapRange(in_min, in_max, input, out_min, out_max) {\n  return ((input - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\n}\n\nexport function lerp(start, end, amt) {\n  return (1 - amt) * start + amt * end\n}\n\nexport function truncate(value, decimals) {\n  return parseFloat(value.toFixed(decimals))\n}\n"],"names":["_excluded","Animate","to","target","_ref","duration","easing","t","keys","_objectWithoutPropertiesLoose","this","fromKeys","_extends","toKeys","Object","forEach","key","currentTime","isRunning","raf","deltaTime","Math","min","progress","from","Lenis","EventEmitter","constructor","pow","smooth","direction","wrapper","window","content","document","body","_navigator","_navigator$userAgentD","_navigator2","super","onWindowResize","wrapperWidth","innerWidth","wrapperHeight","innerHeight","onWrapperResize","entry","rect","contentRect","width","height","onContentResize","contentWidth","contentHeight","onVirtualScroll","deltaY","originalEvent","e","ctrlKey","stopped","preventDefault","targetScroll","max","limit","scrollTo","onScroll","isScrolling","scroll","lastScroll","wrapperNode","scrollProperty","notify","undefined","arguments","lerp","console","warn","lenisVersion","contentNode","animate","addEventListener","platform","navigator","userAgentData","virtualScroll","el","firefoxMultiplier","mouseMultiplier","indexOf","useKeyboard","useTouch","passive","on","offsetHeight","offsetWidth","wrapperObserver","ResizeObserver","observe","contentObserver","property","start","stop","destroy","_this$wrapperObserver","removeEventListener","disconnect","round","setScroll","value","emit","velocity","offset","immediate"],"mappings":"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"}