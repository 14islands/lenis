{"version":3,"file":"lenis.modern.mjs","sources":["../src/lenis.js","../src/maths.js"],"sourcesContent":["import EventEmitter from 'tiny-emitter'\nimport VirtualScroll from 'virtual-scroll'\nimport { clamp, lerp } from './maths.js'\n\nexport default class Lenis extends EventEmitter {\n  constructor({\n    lerp = 0.1,\n    smooth = true,\n    direction = 'vertical',\n    wrapper = window,\n    content = document.body,\n  } = {}) {\n    super()\n\n    this.wrapperNode = wrapper\n    this.contentNode = content\n\n    this.lerp = lerp\n    this.smooth = smooth\n    this.direction = direction\n\n    this.wrapperNode.addEventListener('scroll', this.onScroll, false)\n\n    const platform =\n      navigator?.userAgentData?.platform || navigator?.platform || 'unknown'\n\n    // listen and normalize wheel event cross-browser\n    this.virtualScroll = new VirtualScroll({\n      el: this.wrapperNode,\n      firefoxMultiplier: 50,\n      mouseMultiplier: platform.indexOf('Win') > -1 ? 1 : 0.4,\n      useKeyboard: false,\n      useTouch: false,\n      passive: false,\n    })\n\n    this.virtualScroll.on(this.onVirtualScroll)\n\n    //observe wrapper node size\n    if (this.wrapperNode === window) {\n      this.wrapperNode.addEventListener('resize', this.onWindowResize, false)\n      this.onWindowResize()\n    } else {\n      this.wrapperHeight = this.wrapperNode.offsetHeight\n      this.wrapperWidth = this.wrapperNode.offsetWidth\n\n      //observe wrapper node size\n      this.wrapperObserver = new ResizeObserver(this.onWrapperResize)\n      this.wrapperObserver.observe(this.wrapperNode)\n    }\n\n    this.contentHeight = this.contentNode.offsetHeight\n    this.contentWidth = this.contentNode.offsetWidth\n\n    //observe content node size\n    this.contentObserver = new ResizeObserver(this.onContentResize)\n    this.contentObserver.observe(this.contentNode)\n\n    //set initial scroll position\n    this.targetScroll = this.scroll = this.wrapperNode[this.scrollProperty]\n\n    this.velocity = 0\n  }\n\n  get scrollProperty() {\n    let property\n    if (this.wrapperNode === window) {\n      property = this.direction === 'horizontal' ? 'scrollX' : 'scrollY'\n    } else {\n      property = this.direction === 'horizontal' ? 'scrollLeft' : 'scrollTop'\n    }\n    return property\n  }\n\n  start() {\n    this.stopped = false\n  }\n\n  stop() {\n    this.stopped = true\n  }\n\n  destroy() {\n    if (this.wrapperNode === window) {\n      this.wrapperNode.removeEventListener('resize', this.onWindowResize, false)\n    }\n    this.wrapperNode.removeEventListener('scroll', this.onScroll, false)\n\n    this.virtualScroll.destroy()\n    this.wrapperObserver?.disconnect()\n    this.contentObserver.disconnect()\n  }\n\n  onWindowResize = () => {\n    this.wrapperWidth = window.innerWidth\n    this.wrapperHeight = window.innerHeight\n  }\n\n  onWrapperResize = (entries) => {\n    const entry = entries[0]\n    if (entry) {\n      const rect = entry.contentRect\n      this.wrapperWidth = rect.width\n      this.wrapperHeight = rect.height\n    }\n  }\n\n  onContentResize = (entries) => {\n    const entry = entries[0]\n    if (entry) {\n      const rect = entry.contentRect\n      this.contentWidth = rect.width\n      this.contentHeight = rect.height\n    }\n  }\n\n  get limit() {\n    return this.direction === 'horizontal'\n      ? this.contentWidth - this.wrapperWidth\n      : this.contentHeight - this.wrapperHeight\n  }\n\n  onVirtualScroll = ({ deltaY, originalEvent: e }) => {\n    if (this.stopped) {\n      e.preventDefault()\n      return\n    }\n\n    // prevent native wheel scrolling\n    if (this.smooth && !e.ctrlKey) e.preventDefault()\n\n    this.targetScroll -= deltaY\n    this.targetScroll = clamp(0, this.targetScroll, this.limit)\n  }\n\n  raf() {\n    if (this.stopped || !this.smooth) return\n    // where smooth scroll happens\n\n    let lastScroll = this.scroll\n\n    // lerp scroll value\n    this.scroll = lerp(this.scroll, this.targetScroll, this.lerp)\n    if (Math.round(this.scroll) === Math.round(this.targetScroll)) {\n      this.scroll = lastScroll = this.targetScroll\n    }\n\n    this.velocity = this.scroll - lastScroll\n\n    if (this.scrolling) {\n      // scroll to lerped scroll value\n      this._scrollTo(this.scroll)\n      this.notify()\n    }\n\n    this.scrolling = this.scroll !== this.targetScroll\n  }\n\n  _scrollTo(value) {\n    this.direction === 'horizontal'\n      ? this.wrapperNode.scrollTo(value, 0)\n      : this.wrapperNode.scrollTo(0, value)\n  }\n\n  onScroll = (e) => {\n    if (this.stopped) return\n\n    // if scrolling is false we can estimate use isn't scrolling with wheel (cmd+F, keyboard or whatever). So we must scroll to without any easing\n    if (!this.scrolling || !this.smooth) {\n      // where native scroll happens\n\n      const lastScroll = this.scroll\n      this.targetScroll = this.scroll = this.wrapperNode[this.scrollProperty]\n      this.velocity = this.scroll - lastScroll\n      this.notify()\n    }\n  }\n\n  notify() {\n    this.emit('scroll', {\n      scroll: this.scroll,\n      limit: this.limit,\n      velocity: this.velocity,\n      direction: this.direction,\n      progress: this.scroll / this.limit,\n    })\n  }\n\n  scrollTo(target, { offset = 0, immediate = false } = {}) {\n    let value\n\n    if (typeof target === 'number') {\n      // Number\n      value = target\n    } else if (target === 'top') {\n      value = 0\n    } else if (target === 'bottom') {\n      value = this.limit\n    } else {\n      let node\n\n      if (typeof target === 'string') {\n        // CSS selector\n        node = document.querySelector(target)\n      } else if (target?.nodeType) {\n        // Node element\n        node = target\n      } else {\n        return\n      }\n\n      if (!target) return\n      let wrapperOffset = 0\n\n      if (this.wrapperNode !== window) {\n        const wrapperRect = this.wrapperNode.getBoundingClientRect()\n        wrapperOffset =\n          this.direction === 'horizontal' ? wrapperRect.left : wrapperRect.top\n      }\n      const rect = node.getBoundingClientRect()\n\n      value =\n        (this.direction === 'horizontal' ? rect.left : rect.top) +\n        this.scroll -\n        wrapperOffset\n    }\n\n    value += offset\n\n    this.targetScroll = value\n    this.scrolling = true\n\n    if (!this.smooth || immediate) {\n      this.scroll = value\n      this._scrollTo(this.scroll)\n    }\n  }\n}\n","export function clamp(min, input, max) {\n  return Math.max(min, Math.min(input, max))\n}\n\nexport function mapRange(in_min, in_max, input, out_min, out_max) {\n  return ((input - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\n}\n\nexport function lerp(start, end, amt) {\n  return (1 - amt) * start + amt * end\n}\n\nexport function truncate(value, decimals) {\n  return parseFloat(value.toFixed(decimals))\n}\n"],"names":["Lenis","EventEmitter","constructor","lerp","smooth","direction","wrapper","window","content","document","body","_navigator","_navigator$userAgentD","_navigator2","super","this","onWindowResize","wrapperWidth","innerWidth","wrapperHeight","innerHeight","onWrapperResize","entries","entry","rect","contentRect","width","height","onContentResize","contentWidth","contentHeight","onVirtualScroll","deltaY","originalEvent","e","stopped","preventDefault","ctrlKey","targetScroll","Math","max","min","limit","onScroll","scrolling","lastScroll","scroll","wrapperNode","scrollProperty","velocity","notify","contentNode","addEventListener","platform","navigator","userAgentData","virtualScroll","VirtualScroll","el","firefoxMultiplier","mouseMultiplier","indexOf","useKeyboard","useTouch","passive","on","offsetHeight","offsetWidth","wrapperObserver","ResizeObserver","observe","contentObserver","property","start","stop","destroy","_this$wrapperObserver","removeEventListener","disconnect","raf","amt","round","_scrollTo","value","scrollTo","emit","progress","target","offset","immediate","node","querySelector","nodeType","wrapperOffset","wrapperRect","getBoundingClientRect","left","top"],"mappings":"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"}