{"version":3,"file":"lenis.modern.mjs","sources":["../src/lenis.js","../src/maths.js"],"sourcesContent":["import EventEmitter from 'tiny-emitter'\r\nimport VirtualScroll from 'virtual-scroll'\r\nimport { version } from '../package.json'\r\nimport { clamp } from './maths.js'\r\n\r\n// simple animation tool\r\nclass Animate {\r\n  to(target, { duration = 1, easing = (t) => t, ...keys } = {}) {\r\n    this.target = target\r\n    this.fromKeys = { ...keys }\r\n    this.toKeys = { ...keys }\r\n    this.keys = Object.keys({ ...keys })\r\n\r\n    // get initial values\r\n    this.keys.forEach((key) => {\r\n      this.fromKeys[key] = target[key]\r\n    })\r\n\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.currentTime = 0\r\n    this.isRunning = true\r\n  }\r\n\r\n  raf(deltaTime) {\r\n    if (!this.isRunning) return\r\n\r\n    this.currentTime = Math.min(\r\n      this.currentTime + deltaTime * 0.001,\r\n      this.duration\r\n    )\r\n\r\n    const progress = this.easing(this.progress)\r\n\r\n    this.keys.forEach((key) => {\r\n      const from = this.fromKeys[key]\r\n      const to = this.toKeys[key]\r\n\r\n      const value = from + (to - from) * progress\r\n\r\n      this.target[key] = value\r\n    })\r\n\r\n    if (progress === 1) {\r\n      this.isRunning = false\r\n    }\r\n  }\r\n\r\n  get progress() {\r\n    return this.currentTime / this.duration\r\n  }\r\n}\r\n\r\nexport default class Lenis extends EventEmitter {\r\n  constructor({\r\n    duration = 1.2,\r\n    easing = (t) => (t === 1 ? 1 : 1 - Math.pow(2, -10 * t)), // https://easings.net/en#easeOutExpo\r\n    smooth = true,\r\n    smoothTouch = false,\r\n    touchMultiplier = 2,\r\n    direction = 'vertical',\r\n    wrapper = window,\r\n    content = document.body,\r\n  } = {}) {\r\n    super()\r\n\r\n    if (arguments[0].lerp !== undefined) {\r\n      console.warn(\r\n        'Lenis: lerp option is deprecated, you must use duration and easing options instead. See documentation https://github.com/studio-freight/lenis'\r\n      )\r\n    }\r\n\r\n    window.lenisVersion = version\r\n\r\n    this.options = {\r\n      duration,\r\n      easing,\r\n      smooth,\r\n      smoothTouch,\r\n      touchMultiplier,\r\n      direction,\r\n      wrapper,\r\n      content,\r\n    }\r\n\r\n    this.wrapperNode = wrapper\r\n    this.contentNode = content\r\n\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.smooth = smooth\r\n    this.smoothTouch = smoothTouch\r\n    this.touchMultiplier = touchMultiplier\r\n    this.direction = direction\r\n\r\n    this.wrapperNode.addEventListener('scroll', this.onScroll)\r\n\r\n    //observe wrapper node size\r\n    if (this.wrapperNode === window) {\r\n      this.wrapperNode.addEventListener('resize', this.onWindowResize)\r\n      this.onWindowResize()\r\n    } else {\r\n      this.wrapperHeight = this.wrapperNode.offsetHeight\r\n      this.wrapperWidth = this.wrapperNode.offsetWidth\r\n\r\n      //observe wrapper node size\r\n      this.wrapperObserver = new ResizeObserver(this.onWrapperResize)\r\n      this.wrapperObserver.observe(this.wrapperNode)\r\n    }\r\n\r\n    this.contentHeight = this.contentNode.offsetHeight\r\n    this.contentWidth = this.contentNode.offsetWidth\r\n\r\n    //observe content node size\r\n    this.contentObserver = new ResizeObserver(this.onContentResize)\r\n    this.contentObserver.observe(this.contentNode)\r\n\r\n    //set initial scroll position\r\n    this.targetScroll =\r\n      this.scroll =\r\n      this.lastScroll =\r\n        this.wrapperNode[this.scrollProperty]\r\n\r\n    this.animate = new Animate()\r\n\r\n    const platform =\r\n      navigator?.userAgentData?.platform || navigator?.platform || 'unknown'\r\n\r\n    // listen and normalize wheel event cross-browser\r\n    this.virtualScroll = new VirtualScroll({\r\n      el: this.wrapperNode,\r\n      firefoxMultiplier: 50,\r\n      mouseMultiplier: platform.includes('Win') ? 1 : 0.4,\r\n      useKeyboard: false,\r\n      touchMultiplier: this.touchMultiplier,\r\n      useTouch: true,\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll.on(this.onVirtualScroll)\r\n  }\r\n\r\n  get scrollProperty() {\r\n    let property\r\n    if (this.wrapperNode === window) {\r\n      property = this.direction === 'horizontal' ? 'scrollX' : 'scrollY'\r\n    } else {\r\n      property = this.direction === 'horizontal' ? 'scrollLeft' : 'scrollTop'\r\n    }\r\n    return property\r\n  }\r\n\r\n  start() {\r\n    this.stopped = false\r\n  }\r\n\r\n  stop() {\r\n    this.stopped = true\r\n  }\r\n\r\n  destroy() {\r\n    if (this.wrapperNode === window) {\r\n      this.wrapperNode.removeEventListener('resize', this.onWindowResize)\r\n    }\r\n    this.wrapperNode.removeEventListener('scroll', this.onScroll)\r\n\r\n    this.virtualScroll.destroy()\r\n    this.wrapperObserver?.disconnect()\r\n    this.contentObserver.disconnect()\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    this.wrapperWidth = window.innerWidth\r\n    this.wrapperHeight = window.innerHeight\r\n  }\r\n\r\n  onWrapperResize = ([entry]) => {\r\n    if (entry) {\r\n      const rect = entry.contentRect\r\n      this.wrapperWidth = rect.width\r\n      this.wrapperHeight = rect.height\r\n    }\r\n  }\r\n\r\n  onContentResize = ([entry]) => {\r\n    if (entry) {\r\n      const rect = entry.contentRect\r\n      this.contentWidth = rect.width\r\n      this.contentHeight = rect.height\r\n    }\r\n  }\r\n\r\n  get limit() {\r\n    return this.direction === 'horizontal'\r\n      ? this.contentWidth - this.wrapperWidth\r\n      : this.contentHeight - this.wrapperHeight\r\n  }\r\n\r\n  onVirtualScroll = ({ deltaY, originalEvent: e }) => {\r\n    if (e.ctrlKey) return\r\n\r\n    // switch to smooth if event is touch and touch is true\r\n    this.smooth = !!e.changedTouches ? this.smoothTouch : this.options.smooth\r\n\r\n    if (this.stopped) {\r\n      e.preventDefault()\r\n      return\r\n    }\r\n\r\n    if (!this.smooth) return\r\n\r\n    // fix wheel holding scroll https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\r\n    if (e.buttons === 4) return\r\n\r\n    // prevent native wheel scrolling\r\n    if (this.smooth) e.preventDefault()\r\n\r\n    this.targetScroll -= deltaY\r\n    this.targetScroll = clamp(0, this.targetScroll, this.limit)\r\n\r\n    this.scrollTo(this.targetScroll)\r\n  }\r\n\r\n  raf(now) {\r\n    const deltaTime = now - (this.now || 0)\r\n    this.now = now\r\n\r\n    if (this.stopped || !this.smooth) return\r\n\r\n    // where smooth scroll happens\r\n    this.lastScroll = this.scroll\r\n\r\n    this.animate.raf(deltaTime)\r\n\r\n    // fixes velocity when sometimes final native event is not notified\r\n    if (Math.round(this.scroll) === Math.round(this.targetScroll)) {\r\n      this.lastScroll = this.targetScroll\r\n    }\r\n\r\n    if (this.isScrolling) {\r\n      this.setScroll(this.scroll)\r\n      this.notify()\r\n    }\r\n\r\n    this.isScrolling = this.scroll !== this.targetScroll\r\n  }\r\n\r\n  get velocity() {\r\n    return this.scroll - this.lastScroll\r\n  }\r\n\r\n  setScroll(value) {\r\n    this.direction === 'horizontal'\r\n      ? this.wrapperNode.scrollTo(value, 0)\r\n      : this.wrapperNode.scrollTo(0, value)\r\n  }\r\n\r\n  onScroll = (e) => {\r\n    // if isScrolling false we can consider user isn't scrolling with wheel (cmd+F, keyboard or whatever). So we must scroll to value immediately\r\n    if (!this.isScrolling || !this.smooth) {\r\n      // where native scroll happens\r\n      this.targetScroll =\r\n        this.scroll =\r\n        this.lastScroll =\r\n          this.wrapperNode[this.scrollProperty]\r\n\r\n      this.notify()\r\n    }\r\n  }\r\n\r\n  notify() {\r\n    this.emit('scroll', {\r\n      scroll: this.scroll,\r\n      limit: this.limit,\r\n      velocity: this.velocity,\r\n      direction: this.direction,\r\n      progress: this.scroll / this.limit,\r\n    })\r\n  }\r\n\r\n  scrollTo(\r\n    target,\r\n    {\r\n      offset = 0,\r\n      immediate = false,\r\n      duration = this.duration,\r\n      easing = this.easing,\r\n    } = {}\r\n  ) {\r\n    let value\r\n\r\n    if (typeof target === 'number') {\r\n      value = target\r\n    } else if (target === 'top' || target === '#top') {\r\n      value = 0\r\n    } else if (target === 'bottom') {\r\n      value = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      } else {\r\n        return\r\n      }\r\n\r\n      if (!target) return\r\n      let wrapperOffset = 0\r\n\r\n      if (this.wrapperNode !== window) {\r\n        const wrapperRect = this.wrapperNode.getBoundingClientRect()\r\n        wrapperOffset =\r\n          this.direction === 'horizontal' ? wrapperRect.left : wrapperRect.top\r\n      }\r\n\r\n      const rect = node.getBoundingClientRect()\r\n\r\n      value =\r\n        (this.direction === 'horizontal' ? rect.left : rect.top) +\r\n        this.scroll -\r\n        wrapperOffset\r\n    }\r\n\r\n    value += offset\r\n\r\n    this.targetScroll = value\r\n\r\n    if (!this.smooth || immediate) {\r\n      this.setScroll(this.targetScroll)\r\n    } else {\r\n      this.animate.to(this, {\r\n        duration,\r\n        easing,\r\n        scroll: this.targetScroll,\r\n      })\r\n    }\r\n  }\r\n}\r\n","export function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\nexport function mapRange(in_min, in_max, input, out_min, out_max) {\r\n  return ((input - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\r\n}\r\n\r\nexport function lerp(start, end, amt) {\r\n  return (1 - amt) * start + amt * end\r\n}\r\n\r\nexport function truncate(value, decimals) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n"],"names":["_excluded","to","target","_ref","duration","easing","t","keys","_objectWithoutPropertiesLoose","this","fromKeys","toKeys","Object","forEach","key","currentTime","isRunning","raf","deltaTime","Math","min","progress","from","EventEmitter","constructor","pow","smooth","smoothTouch","touchMultiplier","direction","wrapper","window","content","document","body","super","onWindowResize","wrapperWidth","innerWidth","wrapperHeight","innerHeight","onWrapperResize","entry","contentRect","rect","width","height","onContentResize","contentWidth","contentHeight","onVirtualScroll","deltaY","originalEvent","e","ctrlKey","changedTouches","options","stopped","preventDefault","buttons","targetScroll","max","limit","scrollTo","onScroll","isScrolling","scroll","lastScroll","wrapperNode","scrollProperty","notify","undefined","arguments","lerp","console","warn","lenisVersion","contentNode","addEventListener","offsetHeight","offsetWidth","wrapperObserver","observe","contentObserver","ResizeObserver","animate","Animate","platform","navigator","userAgentData","_navigator2","virtualScroll","VirtualScroll","el","firefoxMultiplier","mouseMultiplier","includes","useKeyboard","useTouch","passive","on","property","start","stop","destroy","removeEventListener","disconnect","now","round","setScroll","velocity","value","emit","offset","immediate","node","querySelector","nodeType","wrapperRect","getBoundingClientRect","wrapperOffset","left","top"],"mappings":"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"}