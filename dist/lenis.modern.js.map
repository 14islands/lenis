{"version":3,"file":"lenis.modern.js","sources":["../src/lenis.js","../src/maths.js"],"sourcesContent":["import EventEmitter from 'tiny-emitter'\nimport VirtualScroll from 'virtual-scroll'\nimport { clamp, lerp } from './maths.js'\n\nexport default class Lenis extends EventEmitter {\n  constructor({ lerp = 0.1, smooth = true } = {}) {\n    super()\n\n    this.lerp = lerp\n    this.smooth = smooth\n\n    window.addEventListener('scroll', this.onScroll, false)\n    window.addEventListener('resize', this.onWindowResize, false)\n\n    const platform =\n      navigator?.userAgentData?.platform || navigator?.platform || 'unknown'\n\n    // listen and normalize wheel event cross-browser\n    this.virtualScroll = new VirtualScroll({\n      firefoxMultiplier: 50,\n      mouseMultiplier: platform.indexOf('Win') > -1 ? 1 : 0.4,\n      useKeyboard: false,\n      useTouch: false,\n      passive: false,\n    })\n\n    this.virtualScroll.on(this.onVirtualScroll)\n\n    this.onWindowResize()\n    this.maxScroll = document.body.offsetHeight - this.windowHeight\n\n    // recalculate maxScroll when body height changes\n    this.resizeObserver = new ResizeObserver(this.onResize)\n    this.resizeObserver.observe(document.body)\n\n    this.targetScroll = this.scroll = window.scrollY\n  }\n\n  start() {\n    this.stopped = false\n  }\n\n  stop() {\n    this.stopped = true\n  }\n\n  destroy() {\n    window.removeEventListener('scroll', this.onScroll, false)\n    window.removeEventListener('resize', this.onWindowResize, false)\n    this.virtualScroll.destroy()\n    this.resizeObserver.disconnect()\n  }\n\n  onResize = (entries) => {\n    const entry = entries[0]\n    if (entry) {\n      const rect = entry.contentRect\n      this.maxScroll = rect.height - this.windowHeight\n    }\n  }\n\n  onWindowResize = () => {\n    this.windowHeight = window.innerHeight\n    this.windowWidth = window.innerWidth\n  }\n\n  onVirtualScroll = ({ deltaY, originalEvent: e }) => {\n    // detect potential nested scrollable elements\n    // const path = e.path || (e.composedPath && e.composedPath())\n    // const isNestedScroll = path\n    //   .filter((element) => element.tagName) // filter node elements\n    //   .find((element, i) => {\n    //     return (\n    //       ['auto', 'scroll'].includes(getComputedStyle(element).overflowY) &&\n    //       element.scrollHeight > element.clientHeight\n    //     )\n    //   }) // filter scrollable elements\n\n    // if (isNestedScroll) return\n\n    if (this.stopped) {\n      e.preventDefault()\n      return\n    }\n\n    if (this.smooth && !e.ctrlKey) e.preventDefault()\n\n    this.targetScroll -= deltaY\n    this.targetScroll = clamp(0, this.targetScroll, this.maxScroll)\n  }\n\n  raf() {\n    if (!this.smooth || this.stopped) return\n\n    // lerp scroll value\n    this.scroll = lerp(this.scroll, this.targetScroll, this.lerp)\n    if (Math.round(this.scroll) === Math.round(this.targetScroll)) {\n      this.scroll = this.targetScroll\n    }\n\n    if (this.scrolling) {\n      // scroll to lerped scroll value\n      window.scrollTo(0, this.scroll)\n      this.emit('scroll', { scroll: this.scroll })\n    }\n\n    this.scrolling = this.scroll !== this.targetScroll\n  }\n\n  onScroll = (e) => {\n    // if scrolling is false we can estimate you aren't scrolling with wheel (cmd+F, keyboard or whatever). So we must scroll to without any easing\n    if (!this.scrolling || !this.smooth) {\n      this.targetScroll = this.scroll = window.scrollY\n      this.emit('scroll', { scroll: this.scroll })\n    }\n  }\n\n  scrollTo(target, { offset = 0 } = {}) {\n    let y\n\n    if (typeof target === 'number') {\n      // Number\n      y = target\n    } else if (target === '#top') {\n      y = 0\n    } else if (target === '#bottom') {\n      y = this.maxScroll\n    } else {\n      let node\n\n      if (typeof target === 'string') {\n        // CSS selector\n        node = document.querySelector(target)\n      } else if (target?.nodeType) {\n        // Node element\n        node = target\n      } else {\n        return\n      }\n\n      if (!target) return\n      y = node.getBoundingClientRect().top + this.scroll\n    }\n\n    y += offset\n\n    this.targetScroll = y\n    this.scrolling = true\n    if (!this.smooth) {\n      this.scroll = y\n    }\n  }\n}\n","export function clamp(min, input, max) {\n  return input < min ? min : input > max ? max : input\n}\n\nexport function mapRange(in_min, in_max, input, out_min, out_max) {\n  return ((input - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\n}\n\nexport function lerp(start, end, amt) {\n  return (1 - amt) * start + amt * end\n}\n\nexport function truncate(value, decimals) {\n  return parseFloat(value.toFixed(decimals))\n}\n"],"names":["Lenis","EventEmitter","constructor","lerp","smooth","_navigator","_navigator$userAgentD","_navigator2","super","this","onResize","entries","entry","maxScroll","contentRect","height","windowHeight","onWindowResize","window","innerHeight","windowWidth","innerWidth","onVirtualScroll","deltaY","originalEvent","e","input","max","stopped","preventDefault","ctrlKey","targetScroll","onScroll","scrolling","scroll","scrollY","emit","addEventListener","platform","navigator","userAgentData","virtualScroll","VirtualScroll","firefoxMultiplier","mouseMultiplier","indexOf","useKeyboard","useTouch","passive","on","document","body","offsetHeight","resizeObserver","ResizeObserver","observe","start","stop","destroy","removeEventListener","disconnect","raf","amt","Math","round","scrollTo","target","offset","y","node","querySelector","nodeType","getBoundingClientRect","top"],"mappings":"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"}