{"version":3,"file":"lenis.modern.js","sources":["../src/lenis.js","../src/maths.js"],"sourcesContent":["import EventEmitter from 'tiny-emitter'\r\nimport VirtualScroll from 'virtual-scroll'\r\nimport { clamp, lerp } from './maths.js'\r\n\r\nexport default class Lenis extends EventEmitter {\r\n  constructor({ lerp = 0.1, smooth = true, direction = 'vertical' } = {}) {\r\n    super()\r\n\r\n    this.lerp = lerp\r\n    this.smooth = smooth\r\n    this.direction = direction\r\n\r\n    window.addEventListener('scroll', this.onScroll, false)\r\n    window.addEventListener('resize', this.onWindowResize, false)\r\n\r\n    const platform =\r\n      navigator?.userAgentData?.platform || navigator?.platform || 'unknown'\r\n\r\n    // listen and normalize wheel event cross-browser\r\n    this.virtualScroll = new VirtualScroll({\r\n      firefoxMultiplier: 50,\r\n      mouseMultiplier: platform.indexOf('Win') > -1 ? 1 : 0.4,\r\n      useKeyboard: false,\r\n      useTouch: false,\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll.on(this.onVirtualScroll)\r\n\r\n    this.onWindowResize()\r\n    this.limit =\r\n      this.direction === 'horizontal'\r\n        ? document.body.offsetWidth - this.windowWidth\r\n        : document.body.offsetHeight - this.windowHeight\r\n\r\n    // recalculate maxScroll when body height changes\r\n    this.resizeObserver = new ResizeObserver(this.onResize)\r\n    this.resizeObserver.observe(document.body)\r\n\r\n    this.targetScroll = this.scroll =\r\n      this.direction === 'horizontal' ? window.scrollX : window.scrollY\r\n  }\r\n\r\n  start() {\r\n    this.stopped = false\r\n  }\r\n\r\n  stop() {\r\n    this.stopped = true\r\n  }\r\n\r\n  destroy() {\r\n    window.removeEventListener('scroll', this.onScroll, false)\r\n    window.removeEventListener('resize', this.onWindowResize, false)\r\n    this.virtualScroll.destroy()\r\n    this.resizeObserver.disconnect()\r\n  }\r\n\r\n  onResize = (entries) => {\r\n    const entry = entries[0]\r\n    if (entry) {\r\n      const rect = entry.contentRect\r\n      this.limit =\r\n        this.direction === 'horizontal'\r\n          ? rect.width - this.windowWidth\r\n          : rect.height - this.windowHeight\r\n    }\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    this.windowHeight = window.innerHeight\r\n    this.windowWidth = window.innerWidth\r\n  }\r\n\r\n  onVirtualScroll = ({ deltaY, originalEvent: e }) => {\r\n    // detect potential nested scrollable elements\r\n    // const path = e.path || (e.composedPath && e.composedPath())\r\n    // const isNestedScroll = path\r\n    //   .filter((element) => element.tagName) // filter node elements\r\n    //   .find((element, i) => {\r\n    //     return (\r\n    //       ['auto', 'scroll'].includes(getComputedStyle(element).overflowY) &&\r\n    //       element.scrollHeight > element.clientHeight\r\n    //     )\r\n    //   }) // filter scrollable elements\r\n\r\n    // if (isNestedScroll) return\r\n\r\n    if (this.stopped) {\r\n      e.preventDefault()\r\n      return\r\n    }\r\n\r\n    if (this.smooth && !e.ctrlKey) e.preventDefault()\r\n\r\n    this.targetScroll -= deltaY\r\n    this.targetScroll = clamp(0, this.targetScroll, this.limit)\r\n  }\r\n\r\n  raf() {\r\n    if (!this.smooth || this.stopped) return\r\n\r\n    // lerp scroll value\r\n    this.scroll = lerp(this.scroll, this.targetScroll, this.lerp)\r\n    if (Math.round(this.scroll) === Math.round(this.targetScroll)) {\r\n      this.scroll = this.targetScroll\r\n    }\r\n\r\n    if (this.scrolling) {\r\n      // scroll to lerped scroll value\r\n      this.direction === 'horizontal'\r\n        ? window.scrollTo(this.scroll, 0)\r\n        : window.scrollTo(0, this.scroll)\r\n      this.notify()\r\n    }\r\n\r\n    this.scrolling = this.scroll !== this.targetScroll\r\n  }\r\n\r\n  onScroll = (e) => {\r\n    // if scrolling is false we can estimate you aren't scrolling with wheel (cmd+F, keyboard or whatever). So we must scroll to without any easing\r\n    if (!this.scrolling || !this.smooth) {\r\n      this.targetScroll = this.scroll =\r\n        this.direction === 'horizontal' ? window.scrollX : window.scrollY\r\n      this.notify()\r\n    }\r\n  }\r\n\r\n  notify() {\r\n    this.emit('scroll', { scroll: this.scroll, limit: this.limit })\r\n  }\r\n\r\n  scrollTo(target, { offset = 0 } = {}) {\r\n    let value\r\n\r\n    if (typeof target === 'number') {\r\n      // Number\r\n      value = target\r\n    } else if (target === '#top') {\r\n      value = 0\r\n    } else if (target === '#bottom') {\r\n      value = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      } else {\r\n        return\r\n      }\r\n\r\n      if (!target) return\r\n      const rect = node.getBoundingClientRect()\r\n      value =\r\n        (this.direction === 'horizontal' ? rect.left : rect.top) + this.scroll\r\n    }\r\n\r\n    value += offset\r\n\r\n    this.targetScroll = value\r\n    this.scrolling = true\r\n    if (!this.smooth) {\r\n      this.scroll = value\r\n    }\r\n  }\r\n}\r\n","export function clamp(min, input, max) {\r\n  return input < min ? min : input > max ? max : input\r\n}\r\n\r\nexport function mapRange(in_min, in_max, input, out_min, out_max) {\r\n  return ((input - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\r\n}\r\n\r\nexport function lerp(start, end, amt) {\r\n  return (1 - amt) * start + amt * end\r\n}\r\n\r\nexport function truncate(value, decimals) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n"],"names":["Lenis","EventEmitter","constructor","lerp","smooth","direction","_navigator","_navigator$userAgentD","_navigator2","super","this","onResize","entries","entry","rect","contentRect","limit","width","windowWidth","height","windowHeight","onWindowResize","window","innerHeight","innerWidth","onVirtualScroll","deltaY","originalEvent","e","input","max","stopped","preventDefault","ctrlKey","targetScroll","onScroll","scrolling","scroll","scrollX","scrollY","notify","addEventListener","platform","navigator","userAgentData","virtualScroll","VirtualScroll","firefoxMultiplier","mouseMultiplier","indexOf","useKeyboard","useTouch","passive","on","document","body","offsetWidth","offsetHeight","resizeObserver","ResizeObserver","observe","start","stop","destroy","removeEventListener","disconnect","raf","amt","Math","round","scrollTo","emit","target","offset","value","node","querySelector","nodeType","getBoundingClientRect","left","top"],"mappings":"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"}