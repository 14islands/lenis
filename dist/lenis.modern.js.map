{"version":3,"file":"lenis.modern.js","sources":["../src/lenis.js","../src/maths.js"],"sourcesContent":["import EventEmitter from 'tiny-emitter'\r\nimport VirtualScroll from 'virtual-scroll'\r\nimport { clamp, lerp } from './maths.js'\r\n\r\nexport default class Lenis extends EventEmitter {\r\n  constructor({ lerp = 0.1, smooth = true } = {}) {\r\n    super()\r\n\r\n    this.lerp = lerp\r\n    this.smooth = smooth\r\n\r\n    window.addEventListener('scroll', this.onScroll, false)\r\n    window.addEventListener('resize', this.onWindowResize, false)\r\n\r\n    const platform =\r\n      navigator?.userAgentData?.platform || navigator?.platform || 'unknown'\r\n\r\n    // listen and normalize wheel event cross-browser\r\n    this.virtualScroll = new VirtualScroll({\r\n      firefoxMultiplier: 50,\r\n      mouseMultiplier: platform.indexOf('Win') > -1 ? 1 : 0.4,\r\n      useKeyboard: false,\r\n      useTouch: false,\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll.on(this.onVirtualScroll)\r\n\r\n    this.onWindowResize()\r\n    this.maxScroll = document.body.offsetHeight - this.windowHeight\r\n\r\n    // recalculate maxScroll when body height changes\r\n    this.resizeObserver = new ResizeObserver(this.onResize)\r\n    this.resizeObserver.observe(document.body)\r\n\r\n    this.targetScroll = this.scroll = window.scrollY\r\n  }\r\n\r\n  start() {\r\n    this.stopped = false\r\n  }\r\n\r\n  stop() {\r\n    this.stopped = true\r\n  }\r\n\r\n  destroy() {\r\n    window.removeEventListener('scroll', this.onScroll, false)\r\n    window.removeEventListener('resize', this.onWindowResize, false)\r\n    this.virtualScroll.destroy()\r\n    this.resizeObserver.disconnect()\r\n  }\r\n\r\n  onResize = (entries) => {\r\n    const entry = entries[0]\r\n    if (entry) {\r\n      const rect = entry.contentRect\r\n      this.maxScroll = rect.height - this.windowHeight\r\n    }\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    this.windowHeight = window.innerHeight\r\n    this.windowWidth = window.innerWidth\r\n  }\r\n\r\n  onVirtualScroll = ({ deltaY, originalEvent: e }) => {\r\n    // detect potential nested scrollable elements\r\n    // const path = e.path || e.composedPath?.()\r\n    // const isNestedScroll = path\r\n    //   .filter((element) => element.tagName) // filter node elements\r\n    //   .find(\r\n    //     (element, i) =>\r\n    //       ['auto', 'scroll'].includes(getComputedStyle(element).overflowY) &&\r\n    //       element.scrollHeight > element.clientHeight\r\n    //   ) // filter scrollable elements\r\n\r\n    // if (isNestedScroll) return\r\n\r\n    if (this.stopped) {\r\n      e.preventDefault()\r\n      return\r\n    }\r\n\r\n    if (this.smooth && !e.ctrlKey) e.preventDefault()\r\n\r\n    this.targetScroll -= deltaY\r\n    this.targetScroll = clamp(0, this.targetScroll, this.maxScroll)\r\n  }\r\n\r\n  raf() {\r\n    if (!this.smooth || this.stopped) return\r\n\r\n    // lerp scroll value\r\n    this.scroll = lerp(this.scroll, this.targetScroll, this.lerp)\r\n    if (Math.round(this.scroll) === Math.round(this.targetScroll)) {\r\n      this.scroll = this.targetScroll\r\n    }\r\n\r\n    if (this.scrolling) {\r\n      // scroll to lerped scroll value\r\n      window.scrollTo(0, this.scroll)\r\n      this.emit('scroll', { scroll: this.scroll })\r\n    }\r\n\r\n    this.scrolling = this.scroll !== this.targetScroll\r\n  }\r\n\r\n  onScroll = (e) => {\r\n    // if scrolling is false we can estimate you aren't scrolling with wheel (cmd+F, keyboard or whatever). So we must scroll to without any easing\r\n    if (!this.scrolling || !this.smooth) {\r\n      this.targetScroll = this.scroll = window.scrollY\r\n      this.emit('scroll', { scroll: this.scroll })\r\n    }\r\n  }\r\n\r\n  scrollTo(target, { offset = 0 } = {}) {\r\n    let y\r\n\r\n    if (typeof target === 'number') {\r\n      // Number\r\n      y = target\r\n    } else if (target === '#top') {\r\n      y = 0\r\n    } else if (target === '#bottom') {\r\n      y = this.maxScroll\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      } else {\r\n        return\r\n      }\r\n\r\n      if (!target) return\r\n      y = node.getBoundingClientRect().top + this.scroll\r\n    }\r\n\r\n    y += offset\r\n\r\n    this.targetScroll = y\r\n    this.scrolling = true\r\n    if (!this.smooth) {\r\n      this.scroll = y\r\n    }\r\n  }\r\n}\r\n","export function clamp(min, input, max) {\r\n  return input < min ? min : input > max ? max : input\r\n}\r\n\r\nexport function mapRange(in_min, in_max, input, out_min, out_max) {\r\n  return ((input - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\r\n}\r\n\r\nexport function lerp(start, end, amt) {\r\n  return (1 - amt) * start + amt * end\r\n}\r\n\r\nexport function truncate(value, decimals) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n"],"names":["Lenis","EventEmitter","constructor","lerp","smooth","_navigator","_navigator$userAgentD","_navigator2","super","this","onResize","entries","entry","maxScroll","contentRect","height","windowHeight","onWindowResize","window","innerHeight","windowWidth","innerWidth","onVirtualScroll","deltaY","originalEvent","e","input","max","stopped","preventDefault","ctrlKey","targetScroll","onScroll","scrolling","scroll","scrollY","emit","addEventListener","platform","navigator","userAgentData","virtualScroll","VirtualScroll","firefoxMultiplier","mouseMultiplier","indexOf","useKeyboard","useTouch","passive","on","document","body","offsetHeight","resizeObserver","ResizeObserver","observe","start","stop","destroy","removeEventListener","disconnect","raf","amt","Math","round","scrollTo","target","offset","y","node","querySelector","nodeType","getBoundingClientRect","top"],"mappings":"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"}