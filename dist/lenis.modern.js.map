{"version":3,"file":"lenis.modern.js","sources":["../src/lenis.js","../src/maths.js"],"sourcesContent":["import EventEmitter from 'tiny-emitter'\r\nimport VirtualScroll from 'virtual-scroll'\r\nimport { clamp, lerp } from './maths.js'\r\n\r\nexport default class Lenis extends EventEmitter {\r\n  constructor({ lerp = 0.1, smooth = true } = {}) {\r\n    super()\r\n\r\n    this.lerp = lerp\r\n    this.smooth = smooth\r\n\r\n    window.addEventListener('scroll', this.onScroll, false)\r\n    window.addEventListener('resize', this.onWindowResize, false)\r\n\r\n    const platform =\r\n      navigator?.userAgentData?.platform || navigator?.platform || 'unknown'\r\n\r\n    // listen and normalize wheel event cross-browser\r\n    this.virtualScroll = new VirtualScroll({\r\n      firefoxMultiplier: 50,\r\n      mouseMultiplier: platform.indexOf('Win') > -1 ? 1 : 0.4,\r\n      useKeyboard: false,\r\n      useTouch: false,\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll.on(this.onVirtualScroll)\r\n\r\n    this.onWindowResize()\r\n    this.maxScroll = document.body.offsetHeight - this.windowHeight\r\n\r\n    // recalculate maxScroll when body height changes\r\n    this.resizeObserver = new ResizeObserver(this.onResize)\r\n    this.resizeObserver.observe(document.body)\r\n\r\n    this.targetScroll = this.scroll = window.scrollY\r\n  }\r\n\r\n  start() {\r\n    this.stopped = false\r\n  }\r\n\r\n  stop() {\r\n    this.stopped = true\r\n  }\r\n\r\n  destroy() {\r\n    window.removeEventListener('scroll', this.onScroll, false)\r\n    window.removeEventListener('resize', this.onWindowResize, false)\r\n    this.virtualScroll.destroy()\r\n    this.resizeObserver.disconnect()\r\n  }\r\n\r\n  onResize = (entries) => {\r\n    const entry = entries[0]\r\n    if (entry) {\r\n      const rect = entry.contentRect\r\n      this.maxScroll = rect.height - this.windowHeight\r\n    }\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    this.windowHeight = window.innerHeight\r\n    this.windowWidth = window.innerWidth\r\n  }\r\n\r\n  onVirtualScroll = ({ deltaY, originalEvent: e }) => {\r\n    // detect potential nested scrollable elements\r\n    const isNestedScroll = e.path\r\n      .filter((element) => element.tagName) // filter node elements\r\n      .filter(\r\n        (element) =>\r\n          ['auto', 'scroll'].includes(getComputedStyle(element).overflowY) // filter elements with overflow\r\n      )\r\n      .find((element) => element.scrollHeight > element.clientHeight) // filter scrollable elements\r\n\r\n    if (isNestedScroll) return\r\n\r\n    if (this.stopped) {\r\n      e.preventDefault()\r\n      return\r\n    }\r\n\r\n    if (this.smooth && !e.ctrlKey) e.preventDefault()\r\n\r\n    this.targetScroll -= deltaY\r\n    this.targetScroll = clamp(0, this.targetScroll, this.maxScroll)\r\n  }\r\n\r\n  raf() {\r\n    if (!this.smooth || this.stopped) return\r\n\r\n    // lerp scroll value\r\n    this.scroll = lerp(this.scroll, this.targetScroll, this.lerp)\r\n    if (Math.round(this.scroll) === Math.round(this.targetScroll)) {\r\n      this.scroll = this.targetScroll\r\n    }\r\n\r\n    if (this.scrolling) {\r\n      // scroll to lerped scroll value\r\n      window.scrollTo(0, this.scroll)\r\n      this.emit('scroll', { scroll: this.scroll })\r\n    }\r\n\r\n    this.scrolling = this.scroll !== this.targetScroll\r\n  }\r\n\r\n  onScroll = (e) => {\r\n    // if scrolling is false we can estimate you aren't scrolling with wheel (cmd+F, keyboard or whatever). So we must scroll to without any easing\r\n    if (!this.scrolling || !this.smooth) {\r\n      this.targetScroll = this.scroll = window.scrollY\r\n      this.emit('scroll', { scroll: this.scroll })\r\n    }\r\n  }\r\n\r\n  scrollTo(target, { offset = 0 } = {}) {\r\n    let y\r\n\r\n    if (typeof target === 'number') {\r\n      // Number\r\n      y = target\r\n    } else if (target === '#top') {\r\n      y = 0\r\n    } else if (target === '#bottom') {\r\n      y = this.maxScroll\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      } else {\r\n        return\r\n      }\r\n\r\n      if (!target) return\r\n      y = node.getBoundingClientRect().top + this.scroll\r\n    }\r\n\r\n    y += offset\r\n\r\n    this.targetScroll = y\r\n    this.scrolling = true\r\n    if (!this.smooth) {\r\n      this.scroll = y\r\n    }\r\n  }\r\n}\r\n","export function clamp(min, input, max) {\r\n  return input < min ? min : input > max ? max : input\r\n}\r\n\r\nexport function mapRange(in_min, in_max, input, out_min, out_max) {\r\n  return ((input - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\r\n}\r\n\r\nexport function lerp(start, end, amt) {\r\n  return (1 - amt) * start + amt * end\r\n}\r\n\r\nexport function truncate(value, decimals) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n"],"names":["Lenis","constructor","lerp","smooth","super","this","onResize","entries","entry","maxScroll","contentRect","height","windowHeight","onWindowResize","window","innerHeight","windowWidth","innerWidth","onVirtualScroll","deltaY","originalEvent","e","input","max","path","filter","element","tagName","includes","getComputedStyle","overflowY","find","scrollHeight","clientHeight","stopped","preventDefault","ctrlKey","targetScroll","onScroll","scrolling","scroll","scrollY","emit","addEventListener","platform","navigator","userAgentData","_navigator2","virtualScroll","VirtualScroll","firefoxMultiplier","mouseMultiplier","indexOf","useKeyboard","useTouch","passive","on","document","body","offsetHeight","resizeObserver","ResizeObserver","observe","start","stop","destroy","removeEventListener","disconnect","raf","amt","Math","round","scrollTo","target","offset","y","node","querySelector","nodeType","getBoundingClientRect","top"],"mappings":"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"}