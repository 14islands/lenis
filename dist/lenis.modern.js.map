{"version":3,"file":"lenis.modern.js","sources":["../src/lenis.js","../src/maths.js"],"sourcesContent":["import EventEmitter from 'tiny-emitter'\r\nimport VirtualScroll from 'virtual-scroll'\r\nimport { clamp, lerp } from './maths.js'\r\n\r\nexport default class Lenis extends EventEmitter {\r\n  constructor({ lerp = 0.1, smooth = true, direction = 'vertical' } = {}) {\r\n    super()\r\n\r\n    this.lerp = lerp\r\n    this.smooth = smooth\r\n    this.direction = direction\r\n\r\n    window.addEventListener('scroll', this.onScroll, false)\r\n    window.addEventListener('resize', this.onWindowResize, false)\r\n\r\n    const platform =\r\n      navigator?.userAgentData?.platform || navigator?.platform || 'unknown'\r\n\r\n    // listen and normalize wheel event cross-browser\r\n    this.virtualScroll = new VirtualScroll({\r\n      firefoxMultiplier: 50,\r\n      mouseMultiplier: platform.indexOf('Win') > -1 ? 1 : 0.4,\r\n      useKeyboard: false,\r\n      useTouch: false,\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll.on(this.onVirtualScroll)\r\n\r\n    this.onWindowResize()\r\n    this.limit =\r\n      this.direction === 'horizontal'\r\n        ? document.body.offsetWidth - this.windowWidth\r\n        : document.body.offsetHeight - this.windowHeight\r\n\r\n    // recalculate maxScroll when body height changes\r\n    this.resizeObserver = new ResizeObserver(this.onResize)\r\n    this.resizeObserver.observe(document.body)\r\n\r\n    this.targetScroll = this.scroll =\r\n      this.direction === 'horizontal' ? window.scrollX : window.scrollY\r\n    this.velocity = 0\r\n  }\r\n\r\n  start() {\r\n    this.stopped = false\r\n  }\r\n\r\n  stop() {\r\n    this.stopped = true\r\n  }\r\n\r\n  destroy() {\r\n    window.removeEventListener('scroll', this.onScroll, false)\r\n    window.removeEventListener('resize', this.onWindowResize, false)\r\n    this.virtualScroll.destroy()\r\n    this.resizeObserver.disconnect()\r\n  }\r\n\r\n  onResize = (entries) => {\r\n    const entry = entries[0]\r\n    if (entry) {\r\n      const rect = entry.contentRect\r\n      this.limit =\r\n        this.direction === 'horizontal'\r\n          ? rect.width - this.windowWidth\r\n          : rect.height - this.windowHeight\r\n    }\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    this.windowHeight = window.innerHeight\r\n    this.windowWidth = window.innerWidth\r\n  }\r\n\r\n  onVirtualScroll = ({ deltaY, originalEvent: e }) => {\r\n    if (this.stopped) {\r\n      e.preventDefault()\r\n      return\r\n    }\r\n\r\n    // prevent native wheel scrolling\r\n    if (this.smooth && !e.ctrlKey) e.preventDefault()\r\n\r\n    this.targetScroll -= deltaY\r\n    this.targetScroll = clamp(0, this.targetScroll, this.limit)\r\n  }\r\n\r\n  raf() {\r\n    if (this.stopped || !this.smooth) return\r\n    // where smooth scroll happens\r\n\r\n    let lastScroll = this.scroll\r\n\r\n    // lerp scroll value\r\n    this.scroll = lerp(this.scroll, this.targetScroll, this.lerp)\r\n    if (Math.round(this.scroll) === Math.round(this.targetScroll)) {\r\n      this.scroll = lastScroll = this.targetScroll\r\n    }\r\n\r\n    this.velocity = this.scroll - lastScroll\r\n\r\n    if (this.scrolling) {\r\n      // scroll to lerped scroll value\r\n      this.direction === 'horizontal'\r\n        ? window.scrollTo(this.scroll, 0)\r\n        : window.scrollTo(0, this.scroll)\r\n      this.notify()\r\n    }\r\n\r\n    this.scrolling = this.scroll !== this.targetScroll\r\n  }\r\n\r\n  onScroll = (e) => {\r\n    if (this.stopped) return\r\n\r\n    // if scrolling is false we can estimate use isn't scrolling with wheel (cmd+F, keyboard or whatever). So we must scroll to without any easing\r\n    if (!this.scrolling || !this.smooth) {\r\n      // where native scroll happens\r\n\r\n      const lastScroll = this.scroll\r\n      this.targetScroll = this.scroll =\r\n        this.direction === 'horizontal' ? window.scrollX : window.scrollY\r\n      this.velocity = this.scroll - lastScroll\r\n      this.notify()\r\n    }\r\n  }\r\n\r\n  notify() {\r\n    this.emit('scroll', {\r\n      scroll: this.scroll,\r\n      limit: this.limit,\r\n      velocity: this.velocity,\r\n      direction: this.direction,\r\n    })\r\n  }\r\n\r\n  scrollTo(target, { offset = 0 } = {}) {\r\n    let value\r\n\r\n    if (typeof target === 'number') {\r\n      // Number\r\n      value = target\r\n    } else if (target === 'top') {\r\n      value = 0\r\n    } else if (target === 'bottom') {\r\n      value = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      } else {\r\n        return\r\n      }\r\n\r\n      if (!target) return\r\n      const rect = node.getBoundingClientRect()\r\n      value =\r\n        (this.direction === 'horizontal' ? rect.left : rect.top) + this.scroll\r\n    }\r\n\r\n    value += offset\r\n\r\n    this.targetScroll = value\r\n    this.scrolling = true\r\n    if (!this.smooth) {\r\n      this.scroll = value\r\n      if (this.direction === 'horizontal') {\r\n        window.scrollTo(this.scroll, 0)\r\n      } else {\r\n        window.scrollTo(0, this.scroll)\r\n      }\r\n    }\r\n  }\r\n}\r\n","export function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\nexport function mapRange(in_min, in_max, input, out_min, out_max) {\r\n  return ((input - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\r\n}\r\n\r\nexport function lerp(start, end, amt) {\r\n  return (1 - amt) * start + amt * end\r\n}\r\n\r\nexport function truncate(value, decimals) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n"],"names":["Lenis","EventEmitter","constructor","lerp","smooth","direction","_navigator","_navigator$userAgentD","_navigator2","super","this","onResize","entries","entry","rect","contentRect","limit","width","windowWidth","height","windowHeight","onWindowResize","window","innerHeight","innerWidth","onVirtualScroll","deltaY","originalEvent","e","stopped","preventDefault","ctrlKey","targetScroll","Math","max","min","onScroll","scrolling","lastScroll","scroll","scrollX","scrollY","velocity","notify","addEventListener","navigator","platform","userAgentData","virtualScroll","firefoxMultiplier","mouseMultiplier","indexOf","useKeyboard","useTouch","passive","on","document","body","offsetWidth","offsetHeight","resizeObserver","ResizeObserver","observe","start","stop","destroy","removeEventListener","disconnect","raf","amt","round","scrollTo","emit","target","offset","value","node","querySelector","nodeType","getBoundingClientRect","left","top"],"mappings":"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"}