{"version":3,"file":"lenis.modern.js","sources":["../src/lenis.js","../src/maths.js"],"sourcesContent":["import EventEmitter from 'tiny-emitter'\r\nimport VirtualScroll from 'virtual-scroll'\r\nimport { clamp, lerp } from './maths.js'\r\n\r\nexport default class Lenis extends EventEmitter {\r\n  constructor({ lerp = 0.1, smooth = true, direction = 'vertical' } = {}) {\r\n    super()\r\n\r\n    this.lerp = lerp\r\n    this.smooth = smooth\r\n    this.direction = direction\r\n\r\n    window.addEventListener('scroll', this.onScroll, false)\r\n    window.addEventListener('resize', this.onWindowResize, false)\r\n\r\n    const platform =\r\n      navigator?.userAgentData?.platform || navigator?.platform || 'unknown'\r\n\r\n    // listen and normalize wheel event cross-browser\r\n    this.virtualScroll = new VirtualScroll({\r\n      firefoxMultiplier: 50,\r\n      mouseMultiplier: platform.indexOf('Win') > -1 ? 1 : 0.4,\r\n      useKeyboard: false,\r\n      useTouch: false,\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll.on(this.onVirtualScroll)\r\n\r\n    this.onWindowResize()\r\n    this.limit =\r\n      this.direction === 'horizontal'\r\n        ? document.body.offsetWidth - this.windowWidth\r\n        : document.body.offsetHeight - this.windowHeight\r\n\r\n    // recalculate maxScroll when body height changes\r\n    this.resizeObserver = new ResizeObserver(this.onResize)\r\n    this.resizeObserver.observe(document.body)\r\n\r\n    this.targetScroll = this.scroll =\r\n      this.direction === 'horizontal' ? window.scrollX : window.scrollY\r\n    this.velocity = 0\r\n  }\r\n\r\n  start() {\r\n    this.stopped = false\r\n  }\r\n\r\n  stop() {\r\n    this.stopped = true\r\n  }\r\n\r\n  destroy() {\r\n    window.removeEventListener('scroll', this.onScroll, false)\r\n    window.removeEventListener('resize', this.onWindowResize, false)\r\n    this.virtualScroll.destroy()\r\n    this.resizeObserver.disconnect()\r\n  }\r\n\r\n  onResize = (entries) => {\r\n    const entry = entries[0]\r\n    if (entry) {\r\n      const rect = entry.contentRect\r\n      this.limit =\r\n        this.direction === 'horizontal'\r\n          ? rect.width - this.windowWidth\r\n          : rect.height - this.windowHeight\r\n    }\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    this.windowHeight = window.innerHeight\r\n    this.windowWidth = window.innerWidth\r\n  }\r\n\r\n  onVirtualScroll = ({ deltaY, originalEvent: e }) => {\r\n    if (this.stopped) {\r\n      e.preventDefault()\r\n      return\r\n    }\r\n\r\n    // prevent native wheel scrolling\r\n    if (this.smooth && !e.ctrlKey) e.preventDefault()\r\n\r\n    this.targetScroll -= deltaY\r\n    this.targetScroll = clamp(0, this.targetScroll, this.limit)\r\n  }\r\n\r\n  raf() {\r\n    if (this.stopped || !this.smooth) return\r\n    // where smooth scroll happens\r\n\r\n    let lastScroll = this.scroll\r\n\r\n    // lerp scroll value\r\n    this.scroll = lerp(this.scroll, this.targetScroll, this.lerp)\r\n    if (Math.round(this.scroll) === Math.round(this.targetScroll)) {\r\n      this.scroll = lastScroll = this.targetScroll\r\n    }\r\n\r\n    this.velocity = this.scroll - lastScroll\r\n\r\n    if (this.scrolling) {\r\n      // scroll to lerped scroll value\r\n      this.direction === 'horizontal'\r\n        ? window.scrollTo(this.scroll, 0)\r\n        : window.scrollTo(0, this.scroll)\r\n      this.notify()\r\n    }\r\n\r\n    this.scrolling = this.scroll !== this.targetScroll\r\n  }\r\n\r\n  onScroll = (e) => {\r\n    if (this.stopped) return\r\n\r\n    // if scrolling is false we can estimate use isn't scrolling with wheel (cmd+F, keyboard or whatever). So we must scroll to without any easing\r\n    if (!this.scrolling || !this.smooth) {\r\n      // where native scroll happens\r\n\r\n      const lastScroll = this.scroll\r\n      this.targetScroll = this.scroll =\r\n        this.direction === 'horizontal' ? window.scrollX : window.scrollY\r\n      this.velocity = this.scroll - lastScroll\r\n      this.notify()\r\n    }\r\n  }\r\n\r\n  notify() {\r\n    this.emit('scroll', {\r\n      scroll: this.scroll,\r\n      limit: this.limit,\r\n      velocity: this.velocity,\r\n    })\r\n  }\r\n\r\n  scrollTo(target, { offset = 0 } = {}) {\r\n    let value\r\n\r\n    if (typeof target === 'number') {\r\n      // Number\r\n      value = target\r\n    } else if (target === '#top') {\r\n      value = 0\r\n    } else if (target === '#bottom') {\r\n      value = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      } else {\r\n        return\r\n      }\r\n\r\n      if (!target) return\r\n      const rect = node.getBoundingClientRect()\r\n      value =\r\n        (this.direction === 'horizontal' ? rect.left : rect.top) + this.scroll\r\n    }\r\n\r\n    value += offset\r\n\r\n    this.targetScroll = value\r\n    this.scrolling = true\r\n    if (!this.smooth) {\r\n      this.scroll = value\r\n      if (this.direction === 'horizontal') {\r\n        window.scrollTo(this.scroll, 0)\r\n      } else {\r\n        window.scrollTo(0, this.scroll)\r\n      }\r\n    }\r\n  }\r\n}\r\n","export function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\nexport function mapRange(in_min, in_max, input, out_min, out_max) {\r\n  return ((input - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\r\n}\r\n\r\nexport function lerp(start, end, amt) {\r\n  return (1 - amt) * start + amt * end\r\n}\r\n\r\nexport function truncate(value, decimals) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n"],"names":["EventEmitter","constructor","lerp","smooth","direction","super","this","onResize","entries","entry","contentRect","limit","rect","width","windowWidth","height","windowHeight","onWindowResize","window","innerHeight","innerWidth","onVirtualScroll","deltaY","originalEvent","e","stopped","preventDefault","ctrlKey","targetScroll","Math","max","min","onScroll","scrolling","scroll","scrollX","scrollY","velocity","lastScroll","notify","addEventListener","platform","navigator","userAgentData","_navigator2","virtualScroll","VirtualScroll","firefoxMultiplier","mouseMultiplier","indexOf","useKeyboard","useTouch","passive","on","document","body","offsetWidth","offsetHeight","resizeObserver","ResizeObserver","observe","start","stop","destroy","removeEventListener","disconnect","raf","amt","round","scrollTo","emit","target","offset","value","node","querySelector","nodeType","getBoundingClientRect","left","top"],"mappings":"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"}