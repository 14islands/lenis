{"version":3,"file":"lenis.js","sources":["../src/lenis.js","../src/maths.js"],"sourcesContent":["import EventEmitter from 'tiny-emitter'\r\nimport VirtualScroll from 'virtual-scroll'\r\nimport { clamp, lerp } from './maths.js'\r\n\r\nexport default class Lenis extends EventEmitter {\r\n  constructor({\r\n    lerp = 0.1,\r\n    smooth = true,\r\n    direction = 'vertical',\r\n    wrapper = window,\r\n    content = document.body,\r\n  } = {}) {\r\n    super()\r\n\r\n    this.wrapperNode = wrapper\r\n    this.contentNode = content\r\n\r\n    this.lerp = lerp\r\n    this.smooth = smooth\r\n    this.direction = direction\r\n\r\n    this.wrapperNode.addEventListener('scroll', this.onScroll)\r\n\r\n    const platform =\r\n      navigator?.userAgentData?.platform || navigator?.platform || 'unknown'\r\n\r\n    // listen and normalize wheel event cross-browser\r\n    this.virtualScroll = new VirtualScroll({\r\n      el: this.wrapperNode,\r\n      firefoxMultiplier: 50,\r\n      mouseMultiplier: platform.indexOf('Win') > -1 ? 1 : 0.4,\r\n      useKeyboard: false,\r\n      useTouch: false,\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll.on(this.onVirtualScroll)\r\n\r\n    //observe wrapper node size\r\n    if (this.wrapperNode === window) {\r\n      this.wrapperNode.addEventListener('resize', this.onWindowResize)\r\n      this.onWindowResize()\r\n    } else {\r\n      this.wrapperHeight = this.wrapperNode.offsetHeight\r\n      this.wrapperWidth = this.wrapperNode.offsetWidth\r\n\r\n      //observe wrapper node size\r\n      this.wrapperObserver = new ResizeObserver(this.onWrapperResize)\r\n      this.wrapperObserver.observe(this.wrapperNode)\r\n    }\r\n\r\n    this.contentHeight = this.contentNode.offsetHeight\r\n    this.contentWidth = this.contentNode.offsetWidth\r\n\r\n    //observe content node size\r\n    this.contentObserver = new ResizeObserver(this.onContentResize)\r\n    this.contentObserver.observe(this.contentNode)\r\n\r\n    //set initial scroll position\r\n    this.targetScroll = this.scroll = this.wrapperNode[this.scrollProperty]\r\n\r\n    this.velocity = 0\r\n  }\r\n\r\n  get scrollProperty() {\r\n    let property\r\n    if (this.wrapperNode === window) {\r\n      property = this.direction === 'horizontal' ? 'scrollX' : 'scrollY'\r\n    } else {\r\n      property = this.direction === 'horizontal' ? 'scrollLeft' : 'scrollTop'\r\n    }\r\n    return property\r\n  }\r\n\r\n  start() {\r\n    this.stopped = false\r\n  }\r\n\r\n  stop() {\r\n    this.stopped = true\r\n  }\r\n\r\n  destroy() {\r\n    if (this.wrapperNode === window) {\r\n      this.wrapperNode.removeEventListener('resize', this.onWindowResize)\r\n    }\r\n    this.wrapperNode.removeEventListener('scroll', this.onScroll)\r\n\r\n    this.virtualScroll.destroy()\r\n    this.wrapperObserver?.disconnect()\r\n    this.contentObserver.disconnect()\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    this.wrapperWidth = window.innerWidth\r\n    this.wrapperHeight = window.innerHeight\r\n  }\r\n\r\n  onWrapperResize = ([entry]) => {\r\n    if (entry) {\r\n      const rect = entry.contentRect\r\n      this.wrapperWidth = rect.width\r\n      this.wrapperHeight = rect.height\r\n    }\r\n  }\r\n\r\n  onContentResize = ([entry]) => {\r\n    if (entry) {\r\n      const rect = entry.contentRect\r\n      this.contentWidth = rect.width\r\n      this.contentHeight = rect.height\r\n    }\r\n  }\r\n\r\n  get limit() {\r\n    return this.direction === 'horizontal'\r\n      ? this.contentWidth - this.wrapperWidth\r\n      : this.contentHeight - this.wrapperHeight\r\n  }\r\n\r\n  onVirtualScroll = ({ deltaY, originalEvent: e }) => {\r\n    if (e.ctrlKey) return\r\n\r\n    if (this.stopped) {\r\n      e.preventDefault()\r\n      return\r\n    }\r\n\r\n    // prevent native wheel scrolling\r\n    if (this.smooth) e.preventDefault()\r\n\r\n    this.targetScroll -= deltaY\r\n    this.targetScroll = clamp(0, this.targetScroll, this.limit)\r\n  }\r\n\r\n  raf() {\r\n    if (this.stopped || !this.smooth) return\r\n    // where smooth scroll happens\r\n\r\n    let lastScroll = this.scroll\r\n\r\n    // lerp scroll value\r\n    this.scroll = lerp(this.scroll, this.targetScroll, this.lerp)\r\n    if (Math.round(this.scroll) === Math.round(this.targetScroll)) {\r\n      this.scroll = lastScroll = this.targetScroll\r\n    }\r\n\r\n    this.velocity = this.scroll - lastScroll\r\n\r\n    if (this.isScrolling) {\r\n      // scroll to lerped scroll value\r\n      this.setScroll(this.scroll)\r\n      this.notify()\r\n    }\r\n\r\n    this.isScrolling = this.scroll !== this.targetScroll\r\n  }\r\n\r\n  setScroll(value) {\r\n    this.direction === 'horizontal'\r\n      ? this.wrapperNode.scrollTo(value, 0)\r\n      : this.wrapperNode.scrollTo(0, value)\r\n  }\r\n\r\n  onScroll = () => {\r\n    // if scrolling is false we can estimate user isn't scrolling with wheel (cmd+F, keyboard or whatever). So we must scroll to without any easing\r\n    if (!this.isScrolling || !this.smooth) {\r\n      // where native scroll happens\r\n      this.targetScroll = this.scroll = this.wrapperNode[this.scrollProperty]\r\n      // velocity is not reliable in this context\r\n      this.velocity = 0\r\n\r\n      this.notify()\r\n    }\r\n  }\r\n\r\n  notify() {\r\n    this.emit('scroll', {\r\n      scroll: this.scroll,\r\n      limit: this.limit,\r\n      velocity: this.velocity,\r\n      direction: this.direction,\r\n      progress: this.scroll / this.limit,\r\n    })\r\n  }\r\n\r\n  scrollTo(target, { offset = 0, immediate = false } = {}) {\r\n    let value\r\n\r\n    if (typeof target === 'number') {\r\n      // Number\r\n      value = target\r\n    } else if (target === 'top') {\r\n      value = 0\r\n    } else if (target === 'bottom') {\r\n      value = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      } else {\r\n        return\r\n      }\r\n\r\n      if (!target) return\r\n      let wrapperOffset = 0\r\n\r\n      if (this.wrapperNode !== window) {\r\n        const wrapperRect = this.wrapperNode.getBoundingClientRect()\r\n        wrapperOffset =\r\n          this.direction === 'horizontal' ? wrapperRect.left : wrapperRect.top\r\n      }\r\n      const rect = node.getBoundingClientRect()\r\n\r\n      value =\r\n        (this.direction === 'horizontal' ? rect.left : rect.top) +\r\n        this.scroll -\r\n        wrapperOffset\r\n    }\r\n\r\n    value += offset\r\n\r\n    this.targetScroll = value\r\n    this.isScrolling = true\r\n\r\n    if (!this.smooth || immediate) {\r\n      this.scroll = value\r\n      this.setScroll(this.scroll)\r\n    }\r\n  }\r\n}\r\n","export function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\nexport function mapRange(in_min, in_max, input, out_min, out_max) {\r\n  return ((input - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\r\n}\r\n\r\nexport function lerp(start, end, amt) {\r\n  return (1 - amt) * start + amt * end\r\n}\r\n\r\nexport function truncate(value, decimals) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n"],"names":["Lenis","_temp","_navigator","_navigator$userAgentD","_navigator2","_this","_ref","_ref$lerp","lerp","smooth","_ref$smooth","direction","_ref$direction","wrapper","_ref$wrapper","window","_ref$content","content","document","body","_EventEmitter","call","this","onWindowResize","wrapperWidth","innerWidth","wrapperHeight","innerHeight","onWrapperResize","_ref2","entry","contentRect","rect","width","height","onContentResize","_ref3","contentWidth","contentHeight","onVirtualScroll","_ref4","deltaY","e","originalEvent","ctrlKey","stopped","preventDefault","targetScroll","Math","max","min","limit","onScroll","isScrolling","scroll","wrapperNode","scrollProperty","velocity","notify","contentNode","addEventListener","platform","navigator","userAgentData","virtualScroll","VirtualScroll","el","firefoxMultiplier","mouseMultiplier","indexOf","useKeyboard","useTouch","passive","on","offsetHeight","offsetWidth","wrapperObserver","ResizeObserver","observe","contentObserver","start","stop","destroy","_this$wrapperObserver","removeEventListener","disconnect","raf","amt","lastScroll","round","setScroll","value","scrollTo","emit","progress","target","_temp2","_ref5","offset","_ref5$offset","_ref5$immediate","immediate","node","querySelector","nodeType","wrapperRect","getBoundingClientRect","wrapperOffset","left","top","key","get","EventEmitter"],"mappings":"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"}