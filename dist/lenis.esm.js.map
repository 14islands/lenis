{"version":3,"file":"lenis.esm.js","sources":["../src/lenis.js","../src/maths.js"],"sourcesContent":["import EventEmitter from 'tiny-emitter'\r\nimport VirtualScroll from 'virtual-scroll'\r\nimport { clamp, lerp } from './maths.js'\r\n\r\nexport default class Lenis extends EventEmitter {\r\n  constructor({ lerp = 0.1, smooth = true, direction = 'vertical' } = {}) {\r\n    super()\r\n\r\n    this.lerp = lerp\r\n    this.smooth = smooth\r\n    this.direction = direction\r\n\r\n    window.addEventListener('scroll', this.onScroll, false)\r\n    window.addEventListener('resize', this.onWindowResize, false)\r\n\r\n    const platform =\r\n      navigator?.userAgentData?.platform || navigator?.platform || 'unknown'\r\n\r\n    // listen and normalize wheel event cross-browser\r\n    this.virtualScroll = new VirtualScroll({\r\n      firefoxMultiplier: 50,\r\n      mouseMultiplier: platform.indexOf('Win') > -1 ? 1 : 0.4,\r\n      useKeyboard: false,\r\n      useTouch: false,\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll.on(this.onVirtualScroll)\r\n\r\n    this.onWindowResize()\r\n    this.limit =\r\n      this.direction === 'horizontal'\r\n        ? document.body.offsetWidth - this.windowWidth\r\n        : document.body.offsetHeight - this.windowHeight\r\n\r\n    // recalculate maxScroll when body height changes\r\n    this.resizeObserver = new ResizeObserver(this.onResize)\r\n    this.resizeObserver.observe(document.body)\r\n\r\n    this.targetScroll = this.scroll =\r\n      this.direction === 'horizontal' ? window.scrollX : window.scrollY\r\n  }\r\n\r\n  start() {\r\n    this.stopped = false\r\n  }\r\n\r\n  stop() {\r\n    this.stopped = true\r\n  }\r\n\r\n  destroy() {\r\n    window.removeEventListener('scroll', this.onScroll, false)\r\n    window.removeEventListener('resize', this.onWindowResize, false)\r\n    this.virtualScroll.destroy()\r\n    this.resizeObserver.disconnect()\r\n  }\r\n\r\n  onResize = (entries) => {\r\n    const entry = entries[0]\r\n    if (entry) {\r\n      const rect = entry.contentRect\r\n      this.limit =\r\n        this.direction === 'horizontal'\r\n          ? rect.width - this.windowWidth\r\n          : rect.height - this.windowHeight\r\n    }\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    this.windowHeight = window.innerHeight\r\n    this.windowWidth = window.innerWidth\r\n  }\r\n\r\n  onVirtualScroll = ({ deltaY, originalEvent: e }) => {\r\n    // detect potential nested scrollable elements\r\n    // const path = e.path || (e.composedPath && e.composedPath())\r\n    // const isNestedScroll = path\r\n    //   .filter((element) => element.tagName) // filter node elements\r\n    //   .find((element, i) => {\r\n    //     return (\r\n    //       ['auto', 'scroll'].includes(getComputedStyle(element).overflowY) &&\r\n    //       element.scrollHeight > element.clientHeight\r\n    //     )\r\n    //   }) // filter scrollable elements\r\n\r\n    // if (isNestedScroll) return\r\n\r\n    if (this.stopped) {\r\n      e.preventDefault()\r\n      return\r\n    }\r\n\r\n    if (this.smooth && !e.ctrlKey) e.preventDefault()\r\n\r\n    this.targetScroll -= deltaY\r\n    this.targetScroll = clamp(0, this.targetScroll, this.limit)\r\n  }\r\n\r\n  raf() {\r\n    if (!this.smooth || this.stopped) return\r\n\r\n    // lerp scroll value\r\n    this.scroll = lerp(this.scroll, this.targetScroll, this.lerp)\r\n    if (Math.round(this.scroll) === Math.round(this.targetScroll)) {\r\n      this.scroll = this.targetScroll\r\n    }\r\n\r\n    if (this.scrolling) {\r\n      // scroll to lerped scroll value\r\n      this.direction === 'horizontal'\r\n        ? window.scrollTo(this.scroll, 0)\r\n        : window.scrollTo(0, this.scroll)\r\n      this.notify()\r\n    }\r\n\r\n    this.scrolling = this.scroll !== this.targetScroll\r\n  }\r\n\r\n  onScroll = (e) => {\r\n    // if scrolling is false we can estimate you aren't scrolling with wheel (cmd+F, keyboard or whatever). So we must scroll to without any easing\r\n    if (!this.scrolling || !this.smooth) {\r\n      this.targetScroll = this.scroll =\r\n        this.direction === 'horizontal' ? window.scrollX : window.scrollY\r\n      this.notify()\r\n    }\r\n  }\r\n\r\n  notify() {\r\n    this.emit('scroll', { scroll: this.scroll, limit: this.limit })\r\n  }\r\n\r\n  scrollTo(target, { offset = 0 } = {}) {\r\n    let value\r\n\r\n    if (typeof target === 'number') {\r\n      // Number\r\n      value = target\r\n    } else if (target === '#top') {\r\n      value = 0\r\n    } else if (target === '#bottom') {\r\n      value = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      } else {\r\n        return\r\n      }\r\n\r\n      if (!target) return\r\n      const rect = node.getBoundingClientRect()\r\n      value =\r\n        (this.direction === 'horizontal' ? rect.left : rect.top) + this.scroll\r\n    }\r\n\r\n    value += offset\r\n\r\n    this.targetScroll = value\r\n    this.scrolling = true\r\n    if (!this.smooth) {\r\n      this.scroll = value\r\n      if (this.direction === 'horizontal') {\r\n        window.scrollTo(this.scroll, 0)\r\n      } else {\r\n        window.scrollTo(0, this.scroll)\r\n      }\r\n    }\r\n  }\r\n}\r\n","export function clamp(min, input, max) {\r\n  return input < min ? min : input > max ? max : input\r\n}\r\n\r\nexport function mapRange(in_min, in_max, input, out_min, out_max) {\r\n  return ((input - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\r\n}\r\n\r\nexport function lerp(start, end, amt) {\r\n  return (1 - amt) * start + amt * end\r\n}\r\n\r\nexport function truncate(value, decimals) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n"],"names":["Lenis","_temp","_navigator","_navigator$userAgentD","_navigator2","_this","_ref","_ref$lerp","lerp","_ref$smooth","smooth","_ref$direction","direction","onResize","entries","entry","rect","contentRect","limit","width","windowWidth","height","windowHeight","onWindowResize","window","innerHeight","innerWidth","onVirtualScroll","_ref2","input","max","deltaY","e","originalEvent","stopped","preventDefault","ctrlKey","targetScroll","onScroll","scrolling","scroll","scrollX","scrollY","notify","addEventListener","navigator","userAgentData","platform","virtualScroll","VirtualScroll","firefoxMultiplier","mouseMultiplier","indexOf","useKeyboard","useTouch","passive","on","document","body","offsetWidth","offsetHeight","resizeObserver","observe","start","EventEmitter","this","stop","destroy","removeEventListener","disconnect","raf","amt","Math","round","scrollTo","emit","target","value","_temp2","offset","_ref3$offset","node","querySelector","nodeType","getBoundingClientRect","left","top"],"mappings":"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"}