import t from"tiny-emitter";import i from"virtual-scroll";class s extends t{constructor({lerp:t=.1,smooth:s=!0}={}){var e,o,l;super(),this.onResize=t=>{const i=t[0];i&&(this.maxScroll=i.contentRect.height-this.windowHeight)},this.onWindowResize=()=>{this.windowHeight=window.innerHeight,this.windowWidth=window.innerWidth},this.onVirtualScroll=({deltaY:t,originalEvent:i})=>{var s,e;i.path.filter(t=>t.tagName).filter(t=>["auto","scroll"].includes(getComputedStyle(t).overflowY)).find(t=>t.scrollHeight>t.clientHeight)||(this.stopped?i.preventDefault():(this.smooth&&!i.ctrlKey&&i.preventDefault(),this.targetScroll-=t,this.targetScroll=(e=this.maxScroll,(s=this.targetScroll)<0?0:s>e?e:s)))},this.onScroll=t=>{this.scrolling&&this.smooth||(this.targetScroll=this.scroll=window.scrollY,this.emit("scroll",{scroll:this.scroll}))},this.lerp=t,this.smooth=s,window.addEventListener("scroll",this.onScroll,!1),window.addEventListener("resize",this.onWindowResize,!1);const r=(null==(e=navigator)||null==(o=e.userAgentData)?void 0:o.platform)||(null==(l=navigator)?void 0:l.platform)||"unknown";this.virtualScroll=new i({firefoxMultiplier:50,mouseMultiplier:r.indexOf("Win")>-1?1:.4,useKeyboard:!1,useTouch:!1,passive:!1}),this.virtualScroll.on(this.onVirtualScroll),this.onWindowResize(),this.maxScroll=document.body.offsetHeight-this.windowHeight,this.resizeObserver=new ResizeObserver(this.onResize),this.resizeObserver.observe(document.body),this.targetScroll=this.scroll=window.scrollY}start(){this.stopped=!1}stop(){this.stopped=!0}destroy(){window.removeEventListener("scroll",this.onScroll,!1),window.removeEventListener("resize",this.onWindowResize,!1),this.virtualScroll.destroy(),this.resizeObserver.disconnect()}raf(){var t;this.smooth&&!this.stopped&&(this.scroll=(1-(t=this.lerp))*this.scroll+t*this.targetScroll,Math.round(this.scroll)===Math.round(this.targetScroll)&&(this.scroll=this.targetScroll),this.scrolling&&(window.scrollTo(0,this.scroll),this.emit("scroll",{scroll:this.scroll})),this.scrolling=this.scroll!==this.targetScroll)}scrollTo(t,{offset:i=0}={}){let s;if("number"==typeof t)s=t;else if("#top"===t)s=0;else if("#bottom"===t)s=this.maxScroll;else{let i;if("string"==typeof t)i=document.querySelector(t);else{if(null==t||!t.nodeType)return;i=t}if(!t)return;s=i.getBoundingClientRect().top+this.scroll}s+=i,this.targetScroll=s,this.scrolling=!0,this.smooth||(this.scroll=s)}}export{s as default};
//# sourceMappingURL=lenis.modern.js.map
